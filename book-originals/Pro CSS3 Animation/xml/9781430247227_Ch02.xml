<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE Chapter PUBLIC "-//Springer-Verlag//DTD A++ V2.4//EN" "http://devel.springer.de/A++/V2.4/DTD/A++V2.4.dtd"> <Chapter  Language="En" OutputMedium="All" ID="Chap2"><ChapterInfo Language="En" ChapterType="OriginalPaper" NumberingStyle="ChapterOnly" TocLevels="0" ContainsESM="No" OutputMedium="All"><ChapterID>2</ChapterID><ChapterNumber>Chapter 2</ChapterNumber><ChapterDOI>10.1007/9781430247227_2</ChapterDOI><ChapterSequenceNumber>0</ChapterSequenceNumber><ChapterTitle Language="En">CSS3 Transforms<IndexTerm><Primary>CSS3</Primary><Secondary>transforms</Secondary><SeeAlso><Emphasis Type="Italic">See</Emphasis> Transformation, CSS</SeeAlso></IndexTerm> and Transitions<IndexTerm><Primary>CSS3</Primary><Secondary>transitions</Secondary><SeeAlso><Emphasis Type="Italic">See</Emphasis> Transitions, CSS</SeeAlso></IndexTerm></ChapterTitle><ChapterFirstPage>9</ChapterFirstPage><ChapterLastPage>30</ChapterLastPage><ChapterCopyright><CopyrightHolderName>Springer-Verlag</CopyrightHolderName><CopyrightYear>2012</CopyrightYear></ChapterCopyright><ChapterHistory><OnlineDate><Year><?InsertOnReleaseOF OFYear?></Year><Month><?InsertOnReleaseOF OFMonth?></Month><Day><?InsertOnReleaseOF OFDay?></Day></OnlineDate></ChapterHistory></ChapterInfo><ChapterHeader><Abstract ID="Abs1" Language="En" OutputMedium="Online"><Heading>Abstract</Heading><Para>While CSS Animations can be used to alter almost every aspect of an HTML element (with the exception of the properties listed in the previous chapter), some of the most powerful means of manipulating the presentation of web pages lie in the CSS Transforms and Transitions modules, which are entirely new in CSS3.</Para></Abstract></ChapterHeader><Body><Para>While CSS Animations can be used to alter almost every aspect of an HTML element (with the exception of the properties listed in the previous chapter), some of the most powerful means of manipulating the presentation of web pages lie in the CSS Transforms and Transitions modules, which are entirely new in CSS3.</Para><Para>CSS Transitions are the very simplest form of animation: a movement between two states. Once you master the fundamental syntax for transitions described in this chapter, you will be able to apply simple, effective animations to images (described in Chapter 3) and user interface elements (described in Chapter 4), and then begin to create more complex keyframed animations (described in Chapter 5 and beyond).</Para><Section1 ID="Sec1"><Heading>CSS Transforms<IndexTerm><Primary>Transformation, CSS</Primary></IndexTerm></Heading><Para>There are four main <IndexTerm><Primary>Transformation, CSS</Primary><Secondary>description</Secondary></IndexTerm>CSS translation functions: <Emphasis FontCategory="NonProportional">translate</Emphasis>, <Emphasis FontCategory="NonProportional">rotate</Emphasis>, <Emphasis FontCategory="NonProportional">scale</Emphasis>, and <Emphasis FontCategory="NonProportional">skew</Emphasis>. The functions are combined in the <Emphasis FontCategory="NonProportional">matrix</Emphasis> transformation function. You&#x2019;ll apply these transformations to a standard web page layout of an image floated next to a paragraph of text as shown in Listing 2-1.</Para><Para><Emphasis Type="BoldItalic">Listing 2-1.</Emphasis>&#x2002;<Emphasis Type="Italic">HTML5 Code for a Floated Image</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;!DOCTYPE html&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;html&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;head&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;title &#x2009;&#x003E;</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">Simple CSS3 Transformation&#x003C;/title&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/head&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;body&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;p&#x003E; &#x2009;&#x003C;</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">img src &#x2009;=</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">&quot;dudley-storey-statuette.jpg&quot; alt &#x2009;=</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">&quot;Student-made statuette of Dudley Storey&quot; style &#x2009;=</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">&quot;width: 300px; height: 300px; float: left; margin: 0 2em 1.4em 0;&quot; &#x2009;&#x003E;</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse eu mi tellus. Vestibulum tortor erat, facilisis in auctor semper, pharetra quis mi...&#x003C;/p&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/body&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/html&#x003E;</Emphasis></Para><Para>The code shown in Listing 2-1 will produce the layout shown in Figure <InternalRef RefID="Fig1">2-1</InternalRef>.<Figure ID="Fig1" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 2-1</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>An image floated with paragraph text</SimplePara></CaptionContent></Caption><MediaObject ID="MO1"><ImageObject FileRef="9781430247227_Fig02-01.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>With this basic page in place, you can start to apply transforms to the image element.</Para><Section2 ID="Sec2"><Heading>Rotate<IndexTerm><Primary>Transformation, CSS</Primary><Secondary>rotation transformation</Secondary></IndexTerm></Heading><Para>First, you&#x2019;ll transform <IndexTerm><Primary>Transformation, CSS</Primary><Secondary>rotation transformation</Secondary><Tertiary>description</Tertiary></IndexTerm>the image by rotating it (see Listing 2-2). Values for CSS3 rotation transformations can be specified in degrees, gradians, turns or radians, using positive or negative floating-point values to create clockwise or anticlockwise rotation. You must include vendor prefixes to cover all browsers.</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">2.</Emphasis>&#x2002;<Emphasis Type="Italic">Inline CSS to Rotate an Image</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;img src &#x2009;=</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">&quot;dudley-storey-statuette.jpg&quot; alt &#x2009;=</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">&quot;Statuette of Dudley Storey&quot; style &#x2009;=</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">&quot;width: 300px; height: 300px; float: left; margin: 0 2em 1.4em 0; -moz-transform: rotate(7.5deg); -ms-transform: rotate(7.5deg); -o-transform: rotate(7.5deg); -webkit-transform: rotate(7.5deg); transform: rotate(7.5deg); &quot;&#x003E;</Emphasis></Para><Para>The result of the code in Listing 2-2 is shown in Figure <InternalRef RefID="Fig2">2-2</InternalRef>.<Figure ID="Fig2" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 2-2</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>A floated image with a CSS rotate transformation</SimplePara></CaptionContent></Caption><MediaObject ID="MO2"><ImageObject FileRef="9781430247227_Fig02-02.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>While measuring rotation in degrees is the most common approach when writing CSS transformations, CSS3 allows a variety of units, shown in Table <InternalRef RefID="Tab1">2-1</InternalRef>:<Table ID="Tab1" Float="Yes"><Caption Language="En"><CaptionNumber>Table 2-1.</CaptionNumber><CaptionContent><SimplePara>Possible unit systems for the CSS angle data type<IndexTerm><Primary>Transformation, CSS</Primary><Secondary>rotation transformation</Secondary><Tertiary>possible unit systems</Tertiary></IndexTerm></SimplePara></CaptionContent></Caption><tgroup cols="4"><colspec colnum="1" colname="c1"/><colspec colnum="2" colname="c2"/><colspec colnum="3" colname="c3"/><colspec colnum="4" colname="c4"/><thead><row><entry colname="c1"><SimplePara>Unit</SimplePara></entry><entry colname="c2"><SimplePara>CSS</SimplePara></entry><entry colname="c3"><SimplePara>Description</SimplePara></entry><entry colname="c4"><SimplePara>Example</SimplePara></entry></row></thead><tbody><row><entry colname="c1"><SimplePara>Degrees</SimplePara></entry><entry colname="c2"><SimplePara><Emphasis FontCategory="NonProportional">deg</Emphasis></SimplePara></entry><entry colname="c3"><SimplePara>360 degrees in a circle</SimplePara></entry><entry colname="c4"><SimplePara><Emphasis FontCategory="NonProportional">rotate(90deg)</Emphasis></SimplePara></entry></row><row><entry colname="c1"><SimplePara>Gradians</SimplePara></entry><entry colname="c2"><SimplePara><Emphasis FontCategory="NonProportional">grad</Emphasis></SimplePara></entry><entry colname="c3"><SimplePara>Also known as &#x201C;gons&#x201D; or &#x201C;grades&#x201D;. 400 gradians in a circle, making for easier calculations.</SimplePara></entry><entry colname="c4"><SimplePara><Emphasis FontCategory="NonProportional">rotate(100grad)</Emphasis></SimplePara></entry></row><row><entry colname="c1"><SimplePara>Radians</SimplePara></entry><entry colname="c2"><SimplePara><Emphasis FontCategory="NonProportional">rad</Emphasis></SimplePara></entry><entry colname="c3"><SimplePara>2&#x03C0; radians in a full circle, equal to 6.2831853rad.</SimplePara></entry><entry colname="c4"><SimplePara><Emphasis FontCategory="NonProportional">rotate(1.57rad)</Emphasis></SimplePara></entry></row><row><entry colname="c1"><SimplePara>Turns</SimplePara></entry><entry colname="c2"><SimplePara><Emphasis FontCategory="NonProportional">turn</Emphasis></SimplePara></entry><entry colname="c3"><SimplePara>A complete rotation &#x2009;= &#x2009;1 full turn.</SimplePara></entry><entry colname="c4"><SimplePara><Emphasis FontCategory="NonProportional">rotate(.25turn)</Emphasis></SimplePara></entry></row></tbody></tgroup></Table></Para><Para>There are a few things to note when floating an image using <Emphasis FontCategory="NonProportional">rotate</Emphasis>:<IndexTerm><Primary>Transformation, CSS</Primary><Secondary>rotation transformation</Secondary><Tertiary>floating an image</Tertiary></IndexTerm><UnorderedList Mark="Bullet"><ItemContent><Para>Other HTML content on the page is not affected by transformations: the layout of the paragraphs does not change in response to the image rotation; further rotation of the image would cause it to overlap the text. (Content that reacts to transforms is supported in the CSS Regions Module).</Para></ItemContent><ItemContent><Para>The Document Object Model (DOM)<IndexTerm><Primary>Transformation, CSS</Primary><Secondary>DOM</Secondary></IndexTerm><IndexTerm><Primary>Document Object Model (DOM)</Primary></IndexTerm> is similarly unaffected; the value of properties for the transformed element such as <Emphasis FontCategory="NonProportional">offsetWidth</Emphasis> will also be unchanged.</Para></ItemContent><ItemContent><Para>CSS transformations essentially impose a state of relative positioning on the affected element; the original space used by the element is retained.</Para></ItemContent><ItemContent><Para>If the value of the <Emphasis FontCategory="NonProportional">overflow</Emphasis> property is <Emphasis FontCategory="NonProportional">scroll</Emphasis> or <Emphasis FontCategory="NonProportional">auto</Emphasis>, scrollbars will appear as needed to enable you to view content that is transformed outside the visible area.</Para></ItemContent><ItemContent><Para>The rotation occurs from the computed <Emphasis Type="Italic">center</Emphasis> of the element, the <Emphasis FontCategory="NonProportional">transform-origin</Emphasis>.</Para></ItemContent><ItemContent><Para>Other CSS appearance rules applied to the element, such as <Emphasis FontCategory="NonProportional">box-shadow</Emphasis>, are applied <Emphasis Type="Italic">before</Emphasis> the transformation, so they will be rotated with the effect.</Para></ItemContent><ItemContent><Para>Rotating the image by 180 degrees will not flip or mirror it; that can be achieved using a hack of the <Emphasis FontCategory="NonProportional">scale</Emphasis> transformation, discussed later in this chapter, or a 3D rotation, discussed in Chapter 9.</Para></ItemContent><ItemContent><Para>You can rotate any HTML content you wish, but from a design perspective it is not recommended that you rotate text: doing so reduces legibility and induces a painful crick in the neck for your readers.</Para></ItemContent><ItemContent><Para>The unit of measurement needs to be present, even if the amount of rotation is 0. In most CSS measurements, 0 is 0 for any unit, (i.e., <Emphasis FontCategory="NonProportional">width: 0</Emphasis> works as an alternative to <Emphasis FontCategory="NonProportional">width: 0px</Emphasis>.) But when rotating to 0, you must specify <Emphasis FontCategory="NonProportional">transform: rotate(0deg)</Emphasis>; <Emphasis FontCategory="NonProportional">transform: rotate(0)</Emphasis> will not work.</Para></ItemContent></UnorderedList></Para><Para>As you can see, inline styles for transformations can be lengthy due to the requirement to include vendor prefixes. It is much more common to create transformations separately, as a <Emphasis FontCategory="NonProportional">class</Emphasis> or <Emphasis FontCategory="NonProportional">id</Emphasis> in an embedded or linked stylesheet (see Listing 2-3).</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">3.</Emphasis>&#x2002;<Emphasis Type="Italic">An Embedded CSS Stylesheet for Transforming an Image</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;!DOCTYPE html&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;html&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;head&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;title &#x2009;&#x003E;</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">Simple CSS3 Transformation&#x003C;/title&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;style&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">width: 300px; height: 300px; float: left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: rotate(7.5deg); -o-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-ms-transform: rotate(7.5deg); -webkit-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/style&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/head&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;body&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;p &#x2009;&#x003E;</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">&#x003C;img src &#x2009;=</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">&quot;dudley-storey-statuette.jpg&quot; alt &#x2009;=</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">&quot;Statuette of Dudley Storey&quot; style &#x2009;=</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">&quot;margin: 0 2em 1.4em 0; class &#x2009;=</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">&quot;tilt&quot; &#x2009;&#x003E;</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse eu mi tellus. Vestibulum tortor erat, facilisis in auctor semper, pharetra quis mi...&#x003C;/p&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/body&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/html&#x003E;</Emphasis></Para><Para>To rotate the image as if it were pinned at its top-right corner, you must move the element&#x2019;s <Emphasis FontCategory="NonProportional">transform-origin</Emphasis> to that location, as shown in Listing 2-4.</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">4.</Emphasis>&#x2002;<Emphasis Type="Italic">Rotating an Image from a Corner</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">width: 300px; height: 300px; float: left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform-origin: right top;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-o-transform-origin: right top; -ms-transform-origin: right top;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-transform-origin: right top; transform-origin: right top;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: rotate(&#x2212;10deg); -o-transform: rotate(&#x2212;10deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-ms-transform: rotate(&#x2212;10deg); -webkit-transform: rotate(&#x2212;10deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: rotate(&#x2212;10deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>The code in Listing 2-4 will create the result shown in Figure <InternalRef RefID="Fig3">2-3</InternalRef>; note that I&#x2019;ve had to change the image&#x2019;s inline style slightly to provide it with more space for the margin on the right-hand side to compensate for the new angle of the image.<Figure ID="Fig3" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 2-3</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>Rotated, floated image with paragraph text</SimplePara></CaptionContent></Caption><MediaObject ID="MO3"><ImageObject FileRef="9781430247227_Fig02-03.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para><Emphasis FontCategory="NonProportional">transform-origin</Emphasis> takes values the same way <Emphasis FontCategory="NonProportional">background-position</Emphasis> and other properties that combine a horizontal and vertical offset do. The values are specified as the horizontal position of the origin point followed by the vertical position, <Emphasis Type="Italic">relative to the element itself.</Emphasis> The values can be specified as keywords (<Emphasis FontCategory="NonProportional">top</Emphasis>, <Emphasis FontCategory="NonProportional">center</Emphasis>, <Emphasis FontCategory="NonProportional">bottom</Emphasis>, <Emphasis FontCategory="NonProportional">left</Emphasis>, and <Emphasis FontCategory="NonProportional">right</Emphasis>), numerically, or as a combination of the two. They can also be outside the area of the element itself (for example, to create a transformation origin axis above or below the element, as shown in the &#x201C;card fan&#x201D; image gallery example in Chapter 3).</Para></Section2><Section2 ID="Sec3"><Heading>The Webkit CSS3 Transform Aliasing Issue<IndexTerm><Primary>Transformation, CSS</Primary><Secondary>webkit CSS3 transform aliasing issue</Secondary></IndexTerm></Heading><Para>Early versions of Chrome and Safari (up to version 5.1) contain a rendering bug: when transforming some elements, the browsers will not antialias the edges of rotated or skewed HTML content, resulting in so-called &#x201C;jaggies&#x201D; or &#x201C;staircasing&#x201D; on the edges of images, as shown in Figure <InternalRef RefID="Fig4">2-4</InternalRef>.<Figure ID="Fig4" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 2-4</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>Zoomed image, showing aliasing of edges on an image rotated with CSS transform</SimplePara></CaptionContent></Caption><MediaObject ID="MO4"><ImageObject FileRef="9781430247227_Fig02-04.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>There are various techniques for getting around this bug :<UnorderedList Mark="Bullet"><ItemContent><Para>Apply a 1-pixel white border around the element.</Para></ItemContent><ItemContent><Para>Apply <Emphasis FontCategory="NonProportional">webkit-backface-visibility: hidden;</Emphasis> to the element.</Para></ItemContent><ItemContent><Para>Add another transformation to the element, such as <Emphasis FontCategory="NonProportional">-webkit-transform: rotate(&#x2212;10deg) translateZ(0);</Emphasis>.</Para></ItemContent></UnorderedList></Para><Para>There is no single technique that best addresses the rendering bug in all circumstances, however; the effectiveness of each technique depends on the context of the element being rendered.</Para></Section2><Section2 ID="Sec4"><Heading>Scale<IndexTerm><Primary>Transformation, CSS</Primary><Secondary>scale transform</Secondary></IndexTerm></Heading><Para>The <Emphasis FontCategory="NonProportional">scale</Emphasis> transform is something of an oddity when applied to images: given that changing an image&#x2019;s <Emphasis FontCategory="NonProportional">height</Emphasis> and <Emphasis FontCategory="NonProportional">width</Emphasis> will have much the same visual result, it might not seem useful. The difference is that <Emphasis FontCategory="NonProportional">scale</Emphasis> can be applied to <Emphasis Type="Italic">any</Emphasis> HTML element: changing the <Emphasis FontCategory="NonProportional">width</Emphasis> of a paragraph will reflow the text content, but altering its <Emphasis FontCategory="NonProportional">scale</Emphasis> will make the text physically larger or smaller.</Para><Para>The value for <Emphasis FontCategory="NonProportional">scale</Emphasis> is a multiplier: <Emphasis FontCategory="NonProportional">scale(2)</Emphasis> applied to an element will make it appear twice as wide and twice as high (in other words, four times its normal size), while <Emphasis FontCategory="NonProportional">scale (.5)</Emphasis> will result in an image that is one-fourth its original size. <Emphasis FontCategory="NonProportional">scale</Emphasis> will transform the element equally in all directions. You can also apply <Emphasis FontCategory="NonProportional">scale</Emphasis> to ordinal directions: X (horizontal), Y (vertical), and Z (depth).</Para><Section3 ID="Sec5"><Heading>Flipping Images with scaleX</Heading><Para>You can use the <Emphasis FontCategory="NonProportional">scale</Emphasis> CSS transformation to effectively mirror HTML elements (usually images, although in principle this technique could be applied to any element). If <Emphasis FontCategory="NonProportional">scale</Emphasis> starts at <Emphasis FontCategory="NonProportional">1</Emphasis>, as shown on the left side of the diagram in Figure <InternalRef RefID="Fig5">2-5</InternalRef>, the affected element will grow smaller as you lower the value of <Emphasis FontCategory="NonProportional">scale</Emphasis> until you reach 0, when the image disappears. If you push the value into negative territory, the image will begin to grow again, but will appear flipped horizontally, as shown on the right side of Figure <InternalRef RefID="Fig5">2-5</InternalRef>.<Figure ID="Fig5" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 2-5</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>Effect of using small and negative values of scaleX()</SimplePara></CaptionContent></Caption><MediaObject ID="MO5"><ImageObject FileRef="9781430247227_Fig02-05.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>You can use <Emphasis FontCategory="NonProportional">scale</Emphasis> to quickly flip an image on a page, rather than processing it through an application such as Adobe PhotoShop to generate a new copy. Listing 2-5 shows how the transformation could be applied to reverse an image of Abraham Lincoln.</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">5.</Emphasis>&#x2002;<Emphasis Type="Italic">Flipping an Image with an Inline Transform Style</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;img src=&quot;lincoln.jpg&quot; alt=&quot;Abraham Lincoln, 1863&quot; style=&quot;width: 389px; height: 480px; -moz-transform: scaleX(&#x2212;1); -o-transform: scaleX(&#x2212;1);  -ms-transform: scaleX(&#x2212;1); -webkit-transform: scaleX(&#x2212;1); transform: scaleX(&#x2212;1);&quot;&#x003E;</Emphasis></Para><Para>Figure <InternalRef RefID="Fig6">2-6</InternalRef> shows the outcome of the code in Listing 2-5.<Figure ID="Fig6" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 2-6</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>Original photograph of Abraham Lincoln (left) flipped using CSS3 scale transform (right)</SimplePara></CaptionContent></Caption><MediaObject ID="MO6"><ImageObject FileRef="9781430247227_Fig02-06.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>Using CSS techniques like this, you can adjust images on the fly instead of having to return to PhotoShop, make the changes, then save and upload the file to the site, and without having to modify any HTML code.</Para></Section3></Section2><Section2 ID="Sec6"><Heading>Translate<IndexTerm><Primary>Transformation, CSS</Primary><Secondary>translate modifier</Secondary></IndexTerm></Heading><Para>Like <Emphasis FontCategory="NonProportional">scale</Emphasis>, the <Emphasis FontCategory="NonProportional">translate</Emphasis> modifier might seem a bit redundant at first: it uses the same coordinate system (and visually, produces the same result) as applying <Emphasis FontCategory="NonProportional">top</Emphasis>, <Emphasis FontCategory="NonProportional">left</Emphasis>, <Emphasis FontCategory="NonProportional">bottom</Emphasis>, and <Emphasis FontCategory="NonProportional">right</Emphasis> properties to a relatively positioned element. However, as you will see, <Emphasis FontCategory="NonProportional">translate</Emphasis> can make it easier to animate HTML content.</Para><Para><Emphasis FontCategory="NonProportional">translate(x,y)</Emphasis> moves the element in horizontal and vertical directions by using positive or negative values. <Emphasis FontCategory="NonProportional">translateX()</Emphasis> moves the element in the horizontal plane, while translateY() moves it vertically.</Para><Para>For example, if you wanted to move the statuette image shown in Figure <InternalRef RefID="Fig4">2-4</InternalRef> up <Emphasis FontCategory="NonProportional">4em</Emphasis> and to the right by <Emphasis FontCategory="NonProportional">50px</Emphasis>, you&#x2019;d use the code shown in Listing 2-6.</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">6.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS Code for Translating an Image</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">width: 300px; height: 300px; float: left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: translate(50px, -4em); -o-transform: translate(50px, -4em);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-ms-transform: translate(50px, -4em); -webkit-transform: translate(50px, -4em);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: translate(50px, -4em);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para></Section2><Section2 ID="Sec7"><Heading>Skew<IndexTerm><Primary>Transformation, CSS</Primary><Secondary>skew</Secondary></IndexTerm></Heading><Para>Applying <Emphasis FontCategory="NonProportional">skew</Emphasis> to an element &#x201C;shears&#x201D; it horizontally or vertically and can be useful for imparting an extra sense of speed or motion to an element. Imagine taking the opposite sides of a rectangle (the top and bottom edges, for example, or the left and right sides) and pulling them in different directions, while ensuring that they remain parallel.</Para><Para>The values entered for <Emphasis FontCategory="NonProportional">skew</Emphasis> refer to the angle that the <Emphasis Type="Italic">other</Emphasis> sides will be set to. For example, &#x201C;leaning&#x201D; an image to the right is a <Emphasis FontCategory="NonProportional">skewX</Emphasis> transformation. <Emphasis FontCategory="NonProportional">transform: skewX(21deg)</Emphasis> will mean that the left and right edges of the image will be set to 21 degrees from the vertical (see Listing 2-7). Leaning the image to the left still uses <Emphasis FontCategory="NonProportional">skewX</Emphasis>, but with a negative value: <Emphasis FontCategory="NonProportional">skewX(&#x2212;21deg)</Emphasis>, for example, will set the same edges negative 21 degrees (that is, left) from the vertical. <Emphasis FontCategory="NonProportional">skewY</Emphasis> takes the <Emphasis Type="Italic">left</Emphasis> and <Emphasis Type="Italic">right</Emphasis> sides of an element&#x2019;s box and shifts them up and down.</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">7.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS Code for Skewing an Image</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">width: 300px; height: 300px; float: left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: skewX(21deg); -o-transform: skewX(21deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-ms-transform: skewX(21deg); -webkit-transform: skewX(21deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: skewX(21deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>You can see the outcome of Listing 2-7 in Figure <InternalRef RefID="Fig7">2-7</InternalRef>.<Figure ID="Fig7" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 2-7</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>A rectangular element skewed with CSS</SimplePara></CaptionContent></Caption><MediaObject ID="MO7"><ImageObject FileRef="9781430247227_Fig02-07.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>A combination of both horizontal and vertical skew with appropriate values while translating the element in the corresponding directions can provide the impression that the element forms one side of a box, as shown in Listing 2-8.</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">8.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS Code to Transform an Image into One Side of an Isometric Box</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">width: 300px; height: 300px; float: left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: skewY(30deg); -o-transform: skewY(30deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-ms-transform: skewY(30deg);  -webkit-transform skewY(30deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: skewY(30deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>Combining individual transformations together (for example, a rotation and translation) provides much more power to your CSS and gives you many more possibilities for animation.</Para></Section2><Section2 ID="Sec8"><Heading>Combining Transformations<IndexTerm><Primary>Transformation, CSS</Primary><Secondary>merging</Secondary></IndexTerm></Heading><Para>You can merge transformations for an element in one of two ways: as space-separated values of a transform property, or as values for a matrix property.</Para><Para>To merge transformations as space-separated values of a <Emphasis FontCategory="NonProportional">transform</Emphasis> property, use the code shown in Listing 2-9.</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">9.</Emphasis>&#x2002;<Emphasis Type="Italic">Multiple Transforms in a Single CSS Declaration</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt { width: 300px; height: 300px; float: left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: translate(50px, -4em) rotate(15deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-transform: translate(50px, -4em) rotate(15deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-o-transform: translate(50px, -4em) rotate(15deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-ms-transform: translate(50px, -4em) rotate(15deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: translate(50px, -4em) rotate(15deg); }</Emphasis></Para><Para>The process for merging transformations as values for a <Emphasis FontCategory="NonProportional">matrix</Emphasis> property is significantly more complicated. Matrix transformations are a little beyond the scope of this book; it&#x2019;s easiest to use a tool to generate the code. The Useragentman Matrix Construction Set (<ExternalRef><RefSource>www.useragentman.com/matrix/</RefSource><RefTarget TargetType="URL" Address="http://www.useragentman.com/matrix/"/></ExternalRef>) and CSS3 Transform Matrix Calculator (<ExternalRef><RefSource>www.leeourand.com/test/transform/test/transform.html</RefSource><RefTarget TargetType="URL" Address="http://www.leeourand.com/test/transform/test/transform.html"/></ExternalRef>) offer two ways of doing so. An explanation of matrix transformations can be found at The CSS Matrix Transform for the Mathematically Challenged (<ExternalRef><RefSource>www.useragentman.com/blog/2011/01/07/css3-matrix-transform-for-the-mathematically-challenged/</RefSource><RefTarget TargetType="URL" Address="http://www.useragentman.com/blog/2011/01/07/css3-matrix-transform-for-the-mathematically-challenged/"/></ExternalRef>) and at the Opera Web Developer site (<ExternalRef><RefSource>http://dev.opera.com/articles/view/understanding-the-css-transforms-matrix</RefSource><RefTarget TargetType="URL" Address="http://dev.opera.com/articles/view/understanding-the-css-transforms-matrix"/></ExternalRef>). While they have the advantage of being shorter and more efficient, matrix transforms are not human-readable, so I won&#x2019;t use them for the examples in this book.</Para><FormalPara Type="Important" RenderingStyle="Style1"><Heading>Note</Heading><Para>Writing separate transforms will <Emphasis Type="Italic">not</Emphasis> work to create a combined transformation.</Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt { width: 300px; height: 300px; float: left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: translate(50px, -4em);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: rotate(15deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-transform: translate(50px, -4em);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-transform: rotate(15deg); }</Emphasis></Para><Para>With the above CSS the browser will follow the <Emphasis Type="Italic">last</Emphasis> applicable line of code; that is, the image will be rotated, but not translated.</Para></FormalPara></Section2></Section1><Section1 ID="Sec9"><Heading>CSS Transitions<IndexTerm><Primary>Transitions, CSS</Primary></IndexTerm></Heading><Para>CSS Transitions <IndexTerm><Primary>Transitions, CSS</Primary><Secondary>description</Secondary></IndexTerm>are exactly that: a transition from one visual state to another, most often initated by some user event, such as a mouseover on an element. Transitions, in other words, are point-to-point. If you need to animate between more than one state and another you will find that CSS Keyframes are better suited for the job. (CSS Keyframes will be discussed in Chapter 5. )</Para><Para>Note that for the examples in this chapter I&#x2019;ll be using <Emphasis FontCategory="NonProportional">:hover</Emphasis> to initiate transitions, but technically <Emphasis Type="Italic">any</Emphasis> modification to the value of an element&#x2019;s property will trigger a transition for that property.</Para><Para>Let&#x2019;s return to the first example and create a simple rotation transition for the image on the page. When the user places their mouse over the image, you want to rotate the element by 7.5 degrees. You&#x2019;ll do this by adding a <Emphasis FontCategory="NonProportional">:hover</Emphasis> pseudo class to the <Emphasis FontCategory="NonProportional">.tilt</Emphasis> selector <Emphasis FontCategory="NonProportional">(:hover</Emphasis> can be applied to every element, not just links), as shown in Listing 2-10.</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">10.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS Transform on Hover, no Transition</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;style&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt:hover {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: rotate(7.5deg); -o-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-ms-transform: rotate(7.5deg); -webkit-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/style&#x003E;</Emphasis></Para><Para>The code shown in Listing 2-10 will work, but if you try viewing the page in a browser you&#x2019;ll see that there&#x2019;s no animation on mouseover, just an instantaneous flick between one state and the other. You&#x2019;ll create an animation between these states by using the <Emphasis FontCategory="NonProportional">transition</Emphasis> property (see Listing 2-11).</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">11.</Emphasis>&#x2002;<Emphasis Type="Italic">Smoothing a CSS Transform by Using a Transition</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt:hover {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: rotate(7.5deg); -o-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-ms-transform: rotate(7.5deg); -webkit-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transition: 2s all; -webkit-transition: 2s all;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-o-transition: 2s all; transition: 2s all;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>The code shown in Listing 2-11 is far more successful: when you mouse over the image you&#x2019;ll see that it now rotates smoothly to its new position. The syntax, repeated with multiple vendor prefixes, is easy to understand, too. The element is rotated over two seconds, and all of its properties can be altered during the transition. Note that the order of the values doesn&#x2019;t matter: you can use <Emphasis FontCategory="NonProportional">2s all</Emphasis> or <Emphasis FontCategory="NonProportional">all 2s</Emphasis>.</Para><Para>If you are animating elements over time periods that include fractions of seconds, you can specify the time period as either floating-point values in seconds, or as milliseconds (thousandths of a second), as shown in Listing 2-12.</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">12.</Emphasis>&#x2002;<Emphasis Type="Italic">A CSS Transition Measured in Seconds</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt:hover {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: rotate(7.5deg); -o-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-ms-transform: rotate(7.5deg); -webkit-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transition: 2.35s all; -webkit-transition: 2.35s all;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-o-transition: 2.35s all; transition: 2.35s all;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>This could also be expressed as shown in Listing 2-13.</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">13.</Emphasis>&#x2002;<Emphasis Type="Italic">A CSS Transition Measured in Milliseconds</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt:hover {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: rotate(7.5deg); -o-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-ms-transform: rotate(7.5deg); -webkit-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transition: 2350ms all;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-transition: 2350ms all; -o-transition: 2350ms all;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transition: 2350ms all;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>While animation timing<IndexTerm><Primary>Transitions, CSS</Primary><Secondary>timing</Secondary></IndexTerm> in milliseconds allows greater precision, the two declarations above achieve the same result&#x2014;using milliseconds does not create a smoother animation sequence. Very few animations will require accuracy down to one-thousandth of a second, and specifying time in milliseconds usually requires more typing, so I stick with the more familiar seconds format (even for values of less than one second: <Emphasis FontCategory="NonProportional">transition: .35s all</Emphasis>, for example). You should use whichever system you feel more comfortable with.</Para><FormalPara Type="Important" RenderingStyle="Style1"><Heading>Note</Heading><Para>If you&#x2019;ve animated with JavaScript, note the difference here: CSS3 can use floating-point values in seconds <Emphasis Type="Italic">or</Emphasis> milliseconds for timing animations. JavaScript uses milliseconds exclusively, although many JavaScript frameworks used to create animations can use time intervals measured in seconds.</Para></FormalPara><Para>There is just one more improvement to make. You&#x2019;ll notice that after the element has been rotated, moving your mouse off the image returns it instantaneously to its initial state. While that may be the visual effect you seek for web page elements in some circumstances, in most cases it is better to show the element returning to its initial orientation just as smoothly as it arrived in its rotated state.</Para><Para>The solution is slightly counterintuitive: move the <Emphasis FontCategory="NonProportional">transition</Emphasis> portion of the CSS code from the <Emphasis FontCategory="NonProportional">:hover</Emphasis> declaration to the <Emphasis Type="Italic">default</Emphasis> state for the image, keeping only the <Emphasis FontCategory="NonProportional">transform</Emphasis> on the <Emphasis FontCategory="NonProportional">:hover</Emphasis> declaration (see Listing 2-14).</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">14.</Emphasis>&#x2002;<Emphasis Type="Italic">Creating a Smooth Transition to and from a Default State</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;style&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">width: 300px; height: 300px; float: left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transition: 2s all; -webkit-transition: 2s all;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-o-transition: 2s all; transition: 2s all;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt:hover {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: rotate(7.5deg); -o-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-ms-transform: rotate(7.5deg); -webkit-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/style&#x003E;</Emphasis></Para><Para>The idea is simple: placing the <Emphasis FontCategory="NonProportional">transition</Emphasis> property on the class declaration implies that any transition is in effect both <Emphasis Type="Italic">from</Emphasis> and <Emphasis Type="Italic">back to</Emphasis> this state. The previous example placed the transition on the <Emphasis FontCategory="NonProportional">:hover</Emphasis> declaration, meaning that it was only effective on mouse hover, not during the return to the normal state.</Para><Para>You&#x2019;ll also notice that the transition can be interrupted if you move your mouse to and from the area of the image; its motion will be reversed smoothly. You can shortcut the code further by only specifying the time for the transition (see Listing 2-15).</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">15.</Emphasis>&#x2002;<Emphasis Type="Italic">Timed Rotation in a CSS Transformation</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">width: 300px; height: 300px; float: left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transition: 2s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-transition: 2s; -o-transition: 2s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transition: 2s; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt:hover {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: rotate(7.5deg); -o-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-ms-transform: rotate(7.5deg); -webkit-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>As you&#x2019;ve seen, creating a smooth and simple animation is easy with CSS3 Transitions. You can modify and animate almost every aspect of an element&#x2019;s appearance that CSS properties provide access to. The transitions I&#x2019;ve shown you so far have changed only one aspect of an element at a time, and always in the same fashion. To create richer animations you can combine multiple property transitions for the same element that occur at different times and speeds.</Para></Section1><Section1 ID="Sec10"><Heading>Delaying and Combining Transition Effects<IndexTerm><Primary>Transitions, CSS</Primary><Secondary>delaying and combining effects</Secondary></IndexTerm></Heading><Para>A transition event <IndexTerm><Primary>Transitions, CSS</Primary><Secondary>delaying and combining effects</Secondary><Tertiary>description</Tertiary></IndexTerm>can be delayed by adding a <Emphasis FontCategory="NonProportional">transition-delay</Emphasis>, either as a separate property or appended to the values for <Emphasis FontCategory="NonProportional">transform</Emphasis>:</Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transition: 2s 4s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-transition: 2s 4s; -o-transition: 2s 4s; transition: 2s 4s;</Emphasis></Para><Para>Note that the delay takes effect at both the start of the animation and the start of the element&#x2019;s reversal to its beginning point. The animation will not begin until four seconds after the cursor has been held over the image; once it is fully rotated, the element will stay in place for four seconds before returning to its default orientation. (Also note that the animation will not begin until the mouse has been held over the image for <Emphasis Type="Italic">at least</Emphasis> four seconds).</Para><Para>You can animate several CSS properties at the same time by adding them to the <Emphasis FontCategory="NonProportional">:hover</Emphasis> state (see Listing 2-16).</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">16.</Emphasis>&#x2002;<Emphasis Type="Italic">Several CSS Properties Transitioned Simultaneosly</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;style&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">width: 300px; height: 300px; float: left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transition: 2s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-ms-transition: 2s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-o-transition: 2s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-transition: 2s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transition: 2s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt:hover {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: rotate(15deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-o-transform: rotate(15deg); -ms-transform: rotate(15deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-transform: rotate(15deg); transform: rotate(15deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">opacity: .3;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/style&#x003E;</Emphasis></Para><Para>The properties<IndexTerm><Primary>Transitions, CSS</Primary><Secondary>delaying and combining effects</Secondary><Tertiary>properties</Tertiary></IndexTerm> can be given separate timings in the animation by stating <Emphasis FontCategory="NonProportional">transition-duration</Emphasis> as a separate property with comma-separated values. Let&#x2019;s say you wanted to move the image to the right on hover, and fade it out at the same time, but with the fade taking half the time that the movement does (see Listing 2-17).</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">17.</Emphasis>&#x2002;<Emphasis Type="Italic">A CSS3 Transition of Multiple Properties with Different Timings for Each</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;style&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">width: 300px; height: 300px; float: left; position: relative;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transition-property: opacity, left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-o-transition-property: opacity, left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-transition-property: opacity, left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transition-property: opacity, left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transition-duration: 2s, 4s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-o-transition-duration: 2s, 4s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-transition-duration: 2s, 4s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transition-duration: 2s, 4s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt:hover {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">opacity: .2; left: 60px;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/style&#x003E;</Emphasis></Para><Para>I&#x2019;ve added <Emphasis FontCategory="NonProportional">position: relative</Emphasis> in order to be able to move the element by changing the value of its <Emphasis FontCategory="NonProportional">left</Emphasis>, and improved the efficiency of the animation by clearly stating the properties to be animated. (Obviously you don&#x2019;t have to prefix properties that are well-supported across all browsers, such as <Emphasis FontCategory="NonProportional">opacity</Emphasis>.) You&#x2019;ll notice that the left-to-right animation may not be particularly smooth in some browsers. Let&#x2019;s change the animated property to <Emphasis FontCategory="NonProportional">translate</Emphasis>, as shown in Listing 2-18.</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">18.</Emphasis>&#x2002;<Emphasis Type="Italic">A CSS3 Translation Transition</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;style&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">width: 300px; height: 300px; float: left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transition-property: opacity, translateX;-o-transition-property: opacity, translateX;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-transition-property: opacity, translateX;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transition-property: opacity, translateX;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transition-duration: 2s, 4s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-o-transition-duration: 2s, 4s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-transition-duration: 2s, 4s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transition-duration: 2s, 4s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt:hover {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">opacity: .2;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-transform: translateX(60px);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: translateX(60px); -ms-transform: translateX(60px);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-o-transform: translateX(60px); transform: translateX(60px);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/style&#x003E;</Emphasis></Para><Para>You may find that the movement is now smoother; <Emphasis FontCategory="NonProportional">translate</Emphasis> is a good alternative for animating the movement of HTML elements via manipulation of <Emphasis FontCategory="NonProportional">absolute</Emphasis> or <Emphasis FontCategory="NonProportional">relative</Emphasis> positioning.</Para><Section2 ID="Sec11"><Heading>Introducing Easing Functions<IndexTerm><Primary>Transitions, CSS</Primary><Secondary>delaying and combining effects</Secondary><Tertiary>easing functions</Tertiary></IndexTerm></Heading><Para>Observe closely the movement of the image on mouseover in the animations you have created so far: there&#x2019;s something a little special about it (lengthening the time value for the animation may help make this clearer). The motion of the image is not mechanical, but organic: from its default position, the picture speeds up as it rotates, reaches a constant speed for a moment, then slows down before it comes to rest.</Para><Para>In animation, this kind of motion is referred to as <Emphasis Type="Italic">ease in/ease out</Emphasis>. It is the motion of objects in the everyday world. For example, no car, no matter how powerful, can attain a 0&#x2013;60 speed record of 0 seconds. Every moving object accelerates to a certain velocity; at the end of its travel (outside of an extreme situation, such as a car crashing into a brick wall at top speed) the object will slow down before coming to a stop.</Para><Para>In CSS3 animation, <Emphasis Type="Italic">ease</Emphasis> transitions are the default; there&#x2019;s no need to state that you are using them. If you want to use animation with a more &#x201C;mechanical&#x201D; feel to it, you can start by specifying a <Emphasis FontCategory="NonProportional">linear</Emphasis> transition (see Listing 2-19).</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">19.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS for a Linear Rotation Transition</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;style&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">width: 300px; height: 300px; float: left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: rotate(7.5deg); -o-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-ms-transform: rotate(7.5deg); -webkit-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transition: 2s transform linear;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">webkit-transition: 2s transform linear; -o-transition: 2s transform linear;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transition: 2s transform linear;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/style&#x003E;</Emphasis></Para><Para>You&#x2019;ll see that the motion of the image on mouseover is now far more mechanical.</Para></Section2><Section2 ID="Sec12"><Heading>Transition Timing Functions and Bezier Curves<IndexTerm><Primary>Bezier curves</Primary></IndexTerm><IndexTerm><Primary>Transitions, CSS</Primary><Secondary>delaying and combining effects</Secondary><Tertiary>transition timing functions</Tertiary></IndexTerm></Heading><Para><Emphasis FontCategory="NonProportional">linear</Emphasis> and <Emphasis FontCategory="NonProportional">ease</Emphasis> are just two forms of what are referred to as <Emphasis Type="Italic">timing functions</Emphasis><IndexTerm><Primary><Emphasis Type="Italic">Bezier curves</Emphasis></Primary><Secondary>timing functions</Secondary></IndexTerm>, that is, descriptions of the way in which an object gets from A to B in a straight line. These timing functions may be graphed in a mathematical expression known as Bezier curves.</Para><Para>For example, if you graphed the motion of an element during its transition from 0 to 15 degrees under linear conditions, with time assigned to the horizontal axis and the angle of the image assigned to the vertical, the graph for linear animation would look like Figure <InternalRef RefID="Fig8">2-8</InternalRef>. As time progresses, the angle of rotation increases in lockstep with the passing seconds, creating a constant rate of motion.<Figure ID="Fig8" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 2-8</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>Graph for linear animation<IndexTerm><Primary>Bezier curves</Primary><Secondary>linear animation graph</Secondary></IndexTerm>: time on x (horizontal) axis, distance/angle on y (vertical) axis. Note the direct relationship</SimplePara></CaptionContent></Caption><MediaObject ID="MO8"><ImageObject FileRef="9781430247227_Fig02-08.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Section3 ID="Sec13"><Heading></Heading><Para>Removing the <Emphasis FontCategory="NonProportional">linear</Emphasis> keyword from the declaration returns the animation to its natural easing state, which when plotted on the same axes would look more like Figure <InternalRef RefID="Fig9">2-9</InternalRef>.<Figure ID="Fig9" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 2-9</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>Easing timing function<IndexTerm><Primary>Bezier curves</Primary><Secondary>easing timing function</Secondary></IndexTerm><IndexTerm><Primary>Easing timing function</Primary></IndexTerm>: time on x axis, distance on y axis</SimplePara></CaptionContent></Caption><MediaObject ID="MO9"><ImageObject FileRef="9781430247227_Fig02-09.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>As you can see, the angle of rotation changes slowly in the first moments of the eased animation; toward the middle of the transition, the rate of change increases markedly, reaches a &#x201C;terminal velocity&#x201D;, then slows down until the sequence reaches its conclusion.</Para><Para>There are several keywords that can be used as a shortcut for common transition motions (see Table <InternalRef RefID="Tab2">2-2</InternalRef>).<Table ID="Tab2" Float="Yes"><Caption Language="En"><CaptionNumber>Table 2-2.</CaptionNumber><CaptionContent><SimplePara>Keyword Alternatives to Common Cubic-Bezier Timing Functions<IndexTerm><Primary>Bezier curves</Primary><Secondary>common cubic-Bezier timing functions</Secondary></IndexTerm></SimplePara></CaptionContent></Caption><tgroup cols="4"><colspec colnum="1" colname="c1"/><colspec colnum="2" colname="c2"/><colspec colnum="3" colname="c3"/><colspec colnum="4" colname="c4"/><thead><row><entry colname="c1" align="center"><SimplePara>Keyword</SimplePara></entry><entry colname="c2" align="center"><SimplePara>Graph</SimplePara></entry><entry colname="c3" align="center"><SimplePara>Cubic-Bezier</SimplePara></entry><entry colname="c4" align="center"><SimplePara>Description</SimplePara></entry></row></thead><tbody><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">linear</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara><InlineMediaObject><ImageObject FileRef="9781430247227_unFig02-01.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></InlineMediaObject></SimplePara></entry><entry colname="c3"><SimplePara><Emphasis FontCategory="NonProportional">0, 0, 1, 1</Emphasis></SimplePara></entry><entry colname="c4"><SimplePara>Instant start and stop; constant velocity through the range of motion.</SimplePara></entry></row><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">ease</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara><InlineMediaObject><ImageObject FileRef="9781430247227_unFig02-02.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></InlineMediaObject></SimplePara></entry><entry colname="c3"><SimplePara><Emphasis FontCategory="NonProportional">0.25, 0.1, 0.25, 1</Emphasis></SimplePara></entry><entry colname="c4"><SimplePara>Swift start, accelerating quickly; slow transition to stop at end.</SimplePara></entry></row><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">ease-in</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara><InlineMediaObject><ImageObject FileRef="9781430247227_unFig02-03.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></InlineMediaObject></SimplePara></entry><entry colname="c3"><SimplePara><Emphasis FontCategory="NonProportional">0.42, 0, 1, 1</Emphasis></SimplePara></entry><entry colname="c4"><SimplePara>Slow start, acceleration climbing to a sudden stop.</SimplePara></entry></row><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">ease-out</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara><InlineMediaObject><ImageObject FileRef="9781430247227_unFig02-04.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></InlineMediaObject></SimplePara></entry><entry colname="c3"><SimplePara><Emphasis FontCategory="NonProportional">0, 0, 0.58, 1</Emphasis></SimplePara></entry><entry colname="c4"><SimplePara>Instant start to animation, motion slows down towards end.</SimplePara></entry></row><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">ease-in-out</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara><InlineMediaObject><ImageObject FileRef="9781430247227_unFig02-05.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></InlineMediaObject></SimplePara></entry><entry colname="c3"><SimplePara><Emphasis FontCategory="NonProportional">0.42, 0, 0.58, 1</Emphasis></SimplePara></entry><entry colname="c4"><SimplePara>Element is eased in and out during animation: a slow, smooth start briefly attaining a constant velocity during the middle of the transition before slowing to a stop.</SimplePara></entry></row></tbody></tgroup></Table></Para><Para>As you can see, all easing curves have a mathematical equivalent in the form of a cubic-bezier expression: a number pair in which each set of floating-point digits describes a point in coordinate space, forming a line that creates a transition curve. (Note that the points at the termination of the curve on either end cannot be moved or defined).</Para><Para>For an ease-in-out curve, the points look like Figure <InternalRef RefID="Fig10">2-10</InternalRef>.<Figure ID="Fig10" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 2-10</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>Bezier curve for an ease-in-out animation effect<IndexTerm><Primary>Bezier curves</Primary><Secondary>ease-in-out animation effect</Secondary></IndexTerm></SimplePara></CaptionContent></Caption><MediaObject ID="MO10"><ImageObject FileRef="9781430247227_Fig02-10.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>Expressed in CSS, Figure <InternalRef RefID="Fig10">2-10</InternalRef> looks like this:</Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transition-timing-function: cubic-bezier(0.42, 0, 0.58, 1);</Emphasis></Para><Para>Understanding the cubic-bezier function allows you to create an almost infinite variety of custom easing curves for your CSS animations. It is even possible to give the points negative values or values greater than 1 to create extreme easing curves, which you can see in Figure <InternalRef RefID="Fig11">2-11</InternalRef>.<Figure ID="Fig11" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 2-11</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>Bezier curve with negative and greater-than-1 values, creating a &#x201C;push-pull&#x201D; animation effect<IndexTerm><Primary>Bezier curves</Primary><Secondary>push-pull animation effect</Secondary></IndexTerm></SimplePara></CaptionContent></Caption><MediaObject ID="MO11"><ImageObject FileRef="9781430247227_Fig02-11.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>In CSS, Figure <InternalRef RefID="Fig11">2-11</InternalRef> looks like this:</Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transition: all 2000ms cubic-bezier(0.280, -0.315, 0.685, 1.390);</Emphasis></Para><Para>The use of such values creates animations with a &#x201C;spring&#x201D; or &#x201C;bounce&#x201D; to them, also known as <Emphasis Type="Italic">push-pull</Emphasis> animations. I will explore the uses of such animations in Chapter 4.</Para><FormalPara Type="Important" RenderingStyle="Style1"><Heading>Tip</Heading><Para>Ceaser (<ExternalRef><RefSource>http://matthewlein.com/ceaser/</RefSource><RefTarget TargetType="URL" Address="http://matthewlein.com/ceaser/"/></ExternalRef>), and Cubic (<ExternalRef><RefSource>http://cssglue.com/cubic</RefSource><RefTarget TargetType="URL" Address="http://cssglue.com/cubic"/></ExternalRef>) are excellent tools for generating CSS easing code from graphically manipulated cubic-bezier curves. Both include a testing service to allow you to see the visual result of changes. Peter Beverloo&#x2019;s resource (<ExternalRef><RefSource>http://peter.sh/experiments/css3-transition-timing-functions/</RefSource><RefTarget TargetType="URL" Address="http://peter.sh/experiments/css3-transition-timing-functions/"/></ExternalRef>) is also useful, especially in visualizing the step function.</Para></FormalPara></Section3><Section3 ID="Sec14"><Heading>Animating in Steps<IndexTerm><Primary>Bezier curves</Primary><Secondary>animation, in steps</Secondary></IndexTerm></Heading><Para>It&#x2019;s also possible to animate an element in steps, rather than as a smooth transition. (Think of the sudden, incremental motion of the second hand on a clock). These are created through the <Emphasis FontCategory="NonProportional">steps</Emphasis> function and variants. Here I&#x2019;ll economize the code by showing just the CSS3 code for standard properties, Firefox and Webkit.</Para><Para>Let&#x2019;s say that you have an <Emphasis FontCategory="NonProportional">h1</Emphasis> you want to animate on mouseover (see Listing 2-20).</Para><Para><Emphasis Type="BoldItalic">Listing 2-</Emphasis><Emphasis Type="Italic"></Emphasis><Emphasis Type="BoldItalic">20.</Emphasis>&#x2002;<Emphasis Type="Italic">Transition Sequence in Steps for a Heading</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;style&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">h1 {</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">font-family: Futura; &quot;Arial Black&quot;, Arial, sans-serif;</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">text-align: center;</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">h1:hover {</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">-moz-transition: 4s all steps(3, end);</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">-webkit-transition: 4s all steps(3, end);</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">transition: 4s all steps(3, end);</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">-moz-transform: translateX(400px);</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">-webkit-transform: translateX(400px);</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">transform: translateX(400px);</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/style&#x003E;</Emphasis></Para><Para>The code in Listing 2-20 will animate all <Emphasis FontCategory="NonProportional">h1</Emphasis> elements in a series of three &#x201C;jumps&#x201D; over four seconds after a two-second delay, with no visible motion between each step. Other variations are possible, as shown in Table <InternalRef RefID="Tab3">2-3</InternalRef>.<Table ID="Tab3" Float="Yes"><Caption Language="En"><CaptionNumber>Table 2-3.</CaptionNumber><CaptionContent><SimplePara>Step Values for CSS3 Transitions</SimplePara></CaptionContent></Caption><tgroup cols="3"><colspec colnum="1" colname="c1"/><colspec colnum="2" colname="c2"/><colspec colnum="3" colname="c3"/><thead><row><entry colname="c1" align="center"><SimplePara>Function</SimplePara></entry><entry colname="c2" align="center"><SimplePara>Graph</SimplePara></entry><entry colname="c3" align="center"><SimplePara>Description</SimplePara></entry></row></thead><tbody><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">steps(3)</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara><InlineMediaObject><ImageObject FileRef="9781430247227_unFig02-06.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></InlineMediaObject></SimplePara></entry><entry colname="c3"><SimplePara>Animation over x number of steps, (<Emphasis FontCategory="NonProportional">steps(3)</Emphasis> is illustrated in the graph). Pauses at start. Equivalent to <Emphasis FontCategory="NonProportional">steps(x, end)</Emphasis>.</SimplePara></entry></row><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">steps(3), end</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara><InlineMediaObject><ImageObject FileRef="9781430247227_unFig02-07.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></InlineMediaObject></SimplePara></entry><entry colname="c3"><SimplePara>Element is still at start, paused at the end.</SimplePara></entry></row><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">steps(x), start</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara><InlineMediaObject><ImageObject FileRef="9781430247227_unFig02-08.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></InlineMediaObject></SimplePara></entry><entry colname="c3"><SimplePara>Instant start to animation, element is paused at the end.</SimplePara></entry></row></tbody></tgroup></Table></Para></Section3><Section3 ID="Sec15"><Heading>Adding Support for Mobile Devices in CSS3 Transitions<IndexTerm><Primary>Bezier curves</Primary><Secondary>mobile devices support</Secondary></IndexTerm></Heading><Para>So far you&#x2019;ve only activated transforms on <Emphasis FontCategory="NonProportional">:hover</Emphasis>. That is by far the most common pseudo-class with which to start a transition, but it is not the only one, as you&#x2019;ll see in Chapter 3.</Para><Para>:<Emphasis FontCategory="NonProportional">hover</Emphasis> can pose two issues for browsers installed on mobile devices:<UnorderedList Mark="Bullet"><ItemContent><Para>The user&#x2019;s fingertip may obscure animations, particularly on smaller screens.</Para></ItemContent><ItemContent><Para>Some devices do not support <Emphasis FontCategory="NonProportional">:hover</Emphasis> (which makes sense as, strictly speaking, all current mobile platforms rely on direct touch). Instead, they cover simple user interaction with <Emphasis FontCategory="NonProportional">:focus.</Emphasis></Para></ItemContent></UnorderedList></Para><Para>If you choose to use <Emphasis FontCategory="NonProportional">:hover</Emphasis>, you should cover the possibility of <Emphasis FontCategory="NonProportional">:focus</Emphasis>-only mobile platforms by using a grouped selector, as shown in the following code:</Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img.tilt:hover, img.tilt:focus {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transform: rotate(7.5deg); -o-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-ms-transform: rotate(7.5deg); -webkit-transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transform: rotate(7.5deg);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para></Section3></Section2></Section1><Section1 ID="Sec16"><Heading>Summary</Heading><Para>In this chapter you&#x2019;ve learned the syntax for CSS3 transforms: <Emphasis FontCategory="NonProportional">scale</Emphasis>, <Emphasis FontCategory="NonProportional">rotate</Emphasis>, <Emphasis FontCategory="NonProportional">skew</Emphasis>, and <Emphasis FontCategory="NonProportional">translate</Emphasis>, including how to flip images and combine transformations. I also covered the code for the simplest form of animation, CSS3 Transitions, showing you how to create transitions, how to modify their timing and delays, and two common ways to initiate them.</Para><Para>The movement and timing of transitions is most commonly controlled through Bezier curves, although it is also possible to use the <Emphasis FontCategory="NonProportional">steps</Emphasis> function and keyword shortcuts.</Para><Para>In the next chapter, we&#x2019;ll be exploring how to apply these animation techniques to image elements.</Para></Section1></Body><BodyRef FileRef="9781430247227_02_OnlinePDF.pdf" TargetType="OnlinePDF"/></Chapter>