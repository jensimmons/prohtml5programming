<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE Chapter PUBLIC "-//Springer-Verlag//DTD A++ V2.4//EN" "http://devel.springer.de/A++/V2.4/DTD/A++V2.4.dtd"> <Chapter  Language="En" OutputMedium="All" ID="Chap4"><ChapterInfo Language="En" ChapterType="OriginalPaper" NumberingStyle="ChapterOnly" TocLevels="0" ContainsESM="No" OutputMedium="All"><ChapterID>4</ChapterID><ChapterNumber>Chapter 4</ChapterNumber><ChapterDOI>10.1007/9781430247227_4</ChapterDOI><ChapterSequenceNumber>0</ChapterSequenceNumber><ChapterTitle Language="En">CSS3 Transitions for UI Elements<IndexTerm><Primary>CSS3 Transitions</Primary></IndexTerm></ChapterTitle><ChapterFirstPage>57</ChapterFirstPage><ChapterLastPage>74</ChapterLastPage><ChapterCopyright><CopyrightHolderName>Springer-Verlag</CopyrightHolderName><CopyrightYear><?InsertOnReleaseOF CopyrightYear?></CopyrightYear></ChapterCopyright><ChapterHistory><OnlineDate><Year><?InsertOnReleaseOF OFYear?></Year><Month><?InsertOnReleaseOF OFMonth?></Month><Day><?InsertOnReleaseOF OFDay?></Day></OnlineDate></ChapterHistory></ChapterInfo><ChapterHeader><Abstract ID="Abs1" Language="En" OutputMedium="Online"><Heading>Abstract</Heading><Para>Another obvious role for CSS3 transitions is enhancing user interface elements within web pages&#x2014;building animation into navigation, forms, and buttons, to make information on your site clearer and more engaging. In this chapter I&#x2019;ll take the animation principles and CSS syntax you&#x2019;ve explored thus far and expand upon them in lessons that will make your designs more interactive, interesting, and fun.</Para></Abstract></ChapterHeader><Body><Para>Another obvious role for CSS3 transitions is enhancing user interface elements within web pages: building animation into navigation, forms, and buttons, to make information on your site clearer and more engaging. In this chapter I&#x2019;ll take the animation principles and CSS syntax you&#x2019;ve explored thus far and expand upon them in lessons that will make your designs more interactive, interesting, and fun.</Para><Section1 ID="Sec1"><Heading>Modern Site Navigation Markup<IndexTerm><Primary>CSS3 transitions</Primary><Secondary>modern site navigation markup</Secondary></IndexTerm></Heading><Para>Before adding transitions to your site navigation it&#x2019;s worthwhile to take a moment and explore the markup you&#x2019;ll be hooking your CSS rules into. For HTML5 sites the primary navigation should be located within a <Emphasis FontCategory="NonProportional">&#x003C;nav&#x003E;</Emphasis> element. To ensure compatibility with screen readers, you will add an ARIA navigation role to the tag, as shown in Listing 4-1.</Para><Para><Emphasis Type="BoldItalic">Listing 4-1.</Emphasis>&#x2002;<Emphasis Type="Italic">Minimal HTML5 Site Navigation Structure</Emphasis><IndexTerm><Primary>CSS3 transitions</Primary><Secondary>HTML5 site navigation structure</Secondary></IndexTerm></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;nav role=navigation&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;a href=index.html&#x003E;Home&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;a href=about.html&#x003E;About Us&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;a href=products.html&#x003E;Products&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/nav&#x003E;</Emphasis></Para><FormalPara Type="Important" RenderingStyle="Style1"><Heading>Note</Heading><Para>You can learn more about ARIA landmark roles for accessibility at <ExternalRef><RefSource><Emphasis FontCategory="NonProportional">www.w3.org/TR/wai-aria-practices/</Emphasis></RefSource><RefTarget TargetType="URL" Address="http://www.w3.org/TR/wai-aria-practices/"/></ExternalRef>.</Para></FormalPara><Para>As you can see, HTML5 allows you to put a simple series of site links inside the <Emphasis FontCategory="NonProportional">nav</Emphasis> element. You may find, however, that adding markup increases the semantic value of the navigation while allowing you to modify its appearance with greater flexibility. In most cases, site navigation can be treated as an unordered list; alternatively, you might want to use an ordered list if the user will be expected to read pages in a particular order.</Para><Para>Whichever method you choose, keyboard shortcuts should also be added for primary links via the <Emphasis FontCategory="NonProportional">accesskey</Emphasis> attribute, as shown in Listing 4-2. (Note that the <Emphasis FontCategory="NonProportional">role</Emphasis> attribute has moved to the unordered list.)</Para><Para><Emphasis Type="BoldItalic">Listing 4-2.</Emphasis>&#x2002;<Emphasis Type="Italic">An Accessible Site Navigation Code Structure</Emphasis><IndexTerm><Primary>CSS3 transitions</Primary><Secondary>HTML5 site navigation structure</Secondary></IndexTerm></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;nav&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;ul role=navigation &#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;li&#x003E;&#x003C;a href=index.html accesskey=1&#x003E;Home&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;li&#x003E;&#x003C;a href=new-xyz-corp.html accesskey=2&#x003E;What&#x0027;s New&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;li&#x003E;&#x003C;a href=about-xyz-corp.html accesskey=a&#x003E;About Us&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;li&#x003E;&#x003C;a href=contact-xyz-corp.html accesskey=6&#x003E;Contact Us / Help&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/ul&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/nav&#x003E;</Emphasis></Para><Para>This is the basis of every primary navigational interface you&#x2019;ll build in this chapter. To save space, you won&#x2019;t always need to include full accessibility features, but it is very important that you use these features in your final production code.</Para><FormalPara Type="Important" RenderingStyle="Style1"><Heading>Note</Heading><Para>Under some circumstances and with certain combinations of CSS rules it is possible for tiny visual gaps to appear between links if they are within <Emphasis FontCategory="NonProportional">&#x003C;li&#x003E;</Emphasis> elements arranged horizontally (as in Listing 4-3). While intended to preserve your code no matter how you format it&#x2014;as opposed to HTML, which collapses all sequential space characters down to a single space, with carriage returns counting as one space, unless content is wrapped in <Emphasis FontCategory="NonProportional">&#x003C;pre&#x003E;</Emphasis> tags&#x2014;the cause for these gaps can be intensely frustrating to track down.</Para><Para>The issue lies not with the CSS, but with the HTML, in the form of carriage returns between each list item. While CSS solutions to this problem exist (setting <Emphasis FontCategory="NonProportional">font-size: 0</Emphasis> on the parent element, for example, or floating the list item elements), the best option is usually to remove the carriage returns, placing all of the list items in a single line, as shown in Listing 4-3.</Para></FormalPara><Para><Emphasis Type="BoldItalic">Listing 4-3.</Emphasis>&#x2002;<Emphasis Type="Italic">An Accessible Site Navigation Code Structure Without Extra Spaces</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;nav&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;ul role=navigation&#x003E;&#x003C;li&#x003E;&#x003C;a href=index.html accesskey=1&#x003E;Home&#x003C;/a&#x003E;&#x003C;li&#x003E;&#x003C;a href=new-xyz-</Emphasis><Emphasis Type="Bold">&#xF0C9;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">corp.html accesskey=2&#x003E;What&#x0027;s New&#x003C;/a&#x003E;&#x003C;li&#x003E;&#x003C;a href=about-xyz-corp.html accesskey=a&#x003E;About</Emphasis><Emphasis Type="Bold">&#xF0C9;</Emphasis> <Emphasis FontCategory="NonProportional">Us&#x003C;/a&#x003E;&#x003C;li&#x003E;&#x003C;a href=contact-xyz-corp.html accesskey=6&#x003E;Contact Us / Help&#x003C;/a&#x003E;&#x003C;/ul&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/nav&#x003E;</Emphasis></Para><FormalPara Type="Important" RenderingStyle="Style1"><Heading></Heading><Para>For the sake of clarity I will not be using this solution in the code samples to come, but you should be aware of the potential problem and its solution.</Para></FormalPara><Para>Regardless of whether or not they are written in a single line of code, navigational structures built with ordered or unordered lists will display each link on a separate line. To create a horizontal navigation bar, you must make one addition to your CSS.</Para></Section1><Section1 ID="Sec2"><Heading>Horizontal Navigation Bar Basics<IndexTerm><Primary>CSS3 transitions</Primary><Secondary>horizontal navigation interfaces</Secondary></IndexTerm><IndexTerm><Primary>Horizontal navigation interfaces</Primary></IndexTerm></Heading><Para>Horizontal navigation interfaces are usually employed when a site is relatively small. (Drop-down menu bars, which I will cover shortly, are an exception to this rule.)</Para><Para>&#x201C;The magical number seven, plus or minus 2&#x201D; is an effective rule of thumb to determine navigational structure: on average, human beings can recall or relate to up to seven items at any one time. More than seven items in your navigation usually means that you&#x2019;ll need to reconsider the UI (user interface)&#x2014;<Emphasis Type="Italic">chunking</Emphasis> or grouping related items together usually solves the problem. Depending on screen width, you can also usually fit seven navigational items horizontally in a navigational browser window; very narrow windows (as on a mobile device) or more than seven primary links usually call for a vertically-oriented navigational format.</Para><Para>Links are automatically presented inline, so there&#x2019;s little need to add CSS just to make them look organized in a horizontal navigation bar. If you&#x2019;ve wrapped the links in <Emphasis FontCategory="NonProportional">&#x003C;li&#x003E;</Emphasis> tags, there is little work to be done: just add the declaration in Listing 4-4 to your stylesheet.</Para><Para><Emphasis Type="BoldItalic">Listing 4-4.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS to Create a Horizontal Navigation Bar from an HTML5 Navigational Structure</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav li { display: inline; }</Emphasis></Para><Para>Now that you have established the basic markup for the most common site navigation formats, you can move on to enhancing them with CSS3.</Para></Section1><Section1 ID="Sec3"><Heading>A Simple Navigation Bar Enhanced with CSS3<IndexTerm><Primary>CSS3 transitions</Primary><Secondary>navigation bar enhanced</Secondary></IndexTerm></Heading><Para>Let&#x2019;s take the simplest possible markup for navigation from Listing 1-1 and place a <Emphasis FontCategory="NonProportional">background-image</Emphasis> behind the navigation bar. You&#x2019;ll visually format the text so that it can still be read by adding <Emphasis FontCategory="NonProportional">a text-shadow and a hover effect</Emphasis>, as in Listing 4-5.</Para><Para><Emphasis Type="BoldItalic">Listing 4-5.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS to Create a Horizontal Navigation Bar from an HTML5 Navigational Structure</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav { background: url(images/clouds.jpg) no-repeat; padding: 1em 0; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav a { text-decoration: none; color: #fff; padding: 1em;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">font-family: Futura, Arial, sans-serif;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">text-shadow: 2px 2px 1px rgba(0, 0, 0, 0.6); }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav a:hover { background: rgba(0, 0, 0, 0.7); }</Emphasis></Para><Para>Then you&#x2019;ll add a simple transition to fade in the background behind a hovered link over time, by adjusting the <Emphasis FontCategory="NonProportional">nav a</Emphasis> selector in Listing 4-6.</Para><Para><Emphasis Type="BoldItalic">Listing 4-6.</Emphasis>&#x2002;<Emphasis Type="Italic">Using CSS3 to Introduce a Transition Effect to a Link</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav a { text-decoration: none; color: #fff; padding: 1em;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">font-family: Futura, Arial, sans-serif;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">text-shadow: 2px 2px 1px rgba(0, 0, 0, 0.6);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-transition: background .85s ease-in-out;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-moz-transition: background .85s ease-in-out;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-o-transition: background .85s ease-in-out;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transition: background .85s ease-in-out;</Emphasis></Para><Para Type="Programcode"> <Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>Finally, a little bit of a safety check: anytime you place an image in the background of an element you should also set a <Emphasis FontCategory="NonProportional">background-color</Emphasis> that represents the primary hue of the image, just in case the picture does not load. Modifying the <Emphasis FontCategory="NonProportional">nav</Emphasis> declaration as shown in Listing 4-7 ensures that the linked text will be legible under all circumstances.</Para><Para><Emphasis Type="BoldItalic">Listing 4-7.</Emphasis><Emphasis Type="Italic">&#x2002;Creating a CSS Background Color As a Fallback to an Image</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav { background: url(images/clouds.jpg) #007 no-repeat; padding: 1em 0; }</Emphasis></Para><Para>You can also apply a different appearance to links that the user has previously visited by using <Emphasis FontCategory="NonProportional">nav a:visited</Emphasis> as a selector. As shown in Listing 4-8, you can even create a different-colored transition when hovering over such links.</Para><Para><Emphasis Type="BoldItalic">Listing 4-8.</Emphasis>&#x2002;<Emphasis Type="Italic">Creating a Separate Effect for Visited Links</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav a:visited:hover {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">background: #f00;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">background: rgba(255, 0, 0, 0.7);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>The transition effect will still be applied to visited links, but they will fade to red, not black. This will produce a menu as shown in Figure <InternalRef RefID="Fig1">4-1</InternalRef>.<Figure ID="Fig1" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 4-1</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>A navigation bar with an animated hover effect</SimplePara></CaptionContent></Caption><MediaObject ID="MO1"><ImageObject FileRef="9781430247227_Fig04-01.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>Adding CSS3 in this way is entirely backwards-compatible with older browsers. If the browser does not support transitions, users will simply see a partially transparent background behind the currently hovered-over link.</Para><FormalPara Type="Important" RenderingStyle="Style1"><Heading><Emphasis Type="Bold">Tip</Emphasis></Heading><Para>The easiest way to envision the behavior of older browsers that only support CSS 2.1 is to bear in mind that they impose a duration of <Emphasis FontCategory="NonProportional">0</Emphasis> on any transition. This, by the way, is the reason the default values of <Emphasis FontCategory="NonProportional">transition-duration</Emphasis> and <Emphasis FontCategory="NonProportional">transition property</Emphasis> are <Emphasis FontCategory="NonProportional">0</Emphasis> and <Emphasis FontCategory="NonProportional">all</Emphasis>, respectively.</Para></FormalPara><Para>If you want to ensure even greater cross-browser compatibility, you can add a fallback flat black <Emphasis FontCategory="NonProportional">(#000</Emphasis>) background for the hovered links, before the <Emphasis FontCategory="NonProportional">rgba</Emphasis> section of the declaration. Browsers that understand <Emphasis FontCategory="NonProportional">rgba</Emphasis> will follow the last rule; those that don&#x2019;t will follow the hexadecimal color. The fade-in will still work and appear correctly in browsers that support it.</Para></Section1><Section1 ID="Sec4"><Heading>Highlighting the Current Page in Navigation<IndexTerm><Primary>CSS3 transitions</Primary><Secondary>current page highlight</Secondary></IndexTerm></Heading><Para>Highlighting the user&#x2019;s current page in the navigation bar is problematic. CSS is not aware of the internal state of an application&#x2014;it does not know <Emphasis Type="Italic">where it is.</Emphasis> You can avoid this issue by creating a <Emphasis FontCategory="NonProportional">class</Emphasis>, <Emphasis FontCategory="NonProportional">data</Emphasis> attribute, or <Emphasis FontCategory="NonProportional">id</Emphasis> for the self-referential link on each page with another on the <Emphasis FontCategory="NonProportional">body</Emphasis> tag, allowing CSS to match the selectors, as shown in Figure <InternalRef RefID="Fig2">4-2</InternalRef>.<Figure ID="Fig2" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 4-2</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>A navigation bar with the current location highlighted</SimplePara></CaptionContent></Caption><MediaObject ID="MO2"><ImageObject FileRef="9781430247227_Fig04-02.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>Begin with the code shown in Listing 4-9.</Para><Para><Emphasis Type="BoldItalic">Listing 4-9.</Emphasis>&#x2002;<Emphasis Type="Italic">Markup for a Visual &#x201C;You Are Here&#x201D; Effect on Site Navigational Bars</Emphasis></Para><Para>On <Emphasis FontCategory="NonProportional">index.html</Emphasis>:</Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;body id=home&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;nav role=navigation&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;a href=index.html class=home&#x003E;Home&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;a href=about.html class=about&#x003E;About Us&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;a href=products.html class=products&#x003E;Products&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/nav&#x003E;</Emphasis></Para><Para><Emphasis FontCategory="NonProportional">about.html</Emphasis>:</Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;body id=about&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;nav role=navigation&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;a href=index.html class=home&#x003E;Home&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;a href=about.html class=about&#x003E;About Us&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;a href=products.html class=products&#x003E;Products&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/nav&#x003E;</Emphasis></Para><Para>Targeting the link that represented the current page is then a simple process of grouping a series of descendant selectors, show in Listing 4-10.</Para><Para><Emphasis Type="BoldItalic">Listing 4-10.</Emphasis><Emphasis Type="Italic">&#x2002;CSS to Highlight Current PageLinks</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">#home nav a.home, #about nav a.about { background: rgba(0,0,212,0.6);}</Emphasis></Para><Para>It&#x2019;s also possible to achieve this effect with an embedded stylesheet on every page that addresses each link class individually. Both approaches have the same disadvantage: they require customizing the markup for each page. A better solution may be a combination of CSS and JavaScript (shown here in the form of JQuery).</Para><Para>The HTML returns to what you had in the beginning (Listing 4-1), and your stylesheet simply takes a new class, shown in Listing 4-11.</Para><Para><Emphasis Type="BoldItalic">Listing 4-11.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS to Highlight &#x201C;You Are Here&#x201D; Links via JavaScript</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">a.current { background: rgba(0,255,0,0.7); }</Emphasis></Para><Para>In the <Emphasis FontCategory="NonProportional">head</Emphasis> of every document you include the code shown in Listing 4-12.</Para><Para><Emphasis Type="BoldItalic">Listing 4-12.</Emphasis>&#x2002;<Emphasis Type="Italic">JavaScript to Apply a &#x201C;You Are Here&#x201D; Class to Site Navigation</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;script src=//code.jquery.com/jquery.min.js&#x003E;&#x003C;/script&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;script&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">$(document).ready(function(){</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">$(&#x0027;ul[role=&quot;navigation&quot;] a&#x0027;).each(function() {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">if (this.href === window.location.href){ $(this). addClass(&#x0027;current&#x0027;);}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">});</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">})</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/script&#x003E;</Emphasis></Para><Para>You can use any of these approaches to highlight the current page in the more advanced navigation examples you will create in the next section.</Para></Section1><Section1 ID="Sec5"><Heading>Horizontal Tab Navigation with CSS3 Transitions<IndexTerm><Primary>CSS3 transitions</Primary><Secondary>horizontal tab navigation</Secondary></IndexTerm></Heading><Para>As a more advanced example of site navigation, you can include movement on &#x201C;tab&#x201D; navigation. In this instance, you&#x2019;ll put the links in an ordered list to provide more structure, as you did in Listing 4-2. You&#x2019;ll create the visual impression of tabs by setting the links side by side, adding a <Emphasis FontCategory="NonProportional">border-radius</Emphasis> to their top-right and top-left corners and placing a gradient in the background of each, per Listing 4-13. This will produce a menu as shown in Figure <InternalRef RefID="Fig3">4-3</InternalRef>.<Figure ID="Fig3" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 4-3</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>An animated tab navigation system<IndexTerm><Primary>CSS3 transitions</Primary><Secondary>horizontal tab navigation</Secondary><Tertiary>animated tab navigation system</Tertiary></IndexTerm></SimplePara></CaptionContent></Caption><MediaObject ID="MO3"><ImageObject FileRef="9781430247227_Fig04-03.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>In this example, you&#x2019;ll use an attribute selector to gain access to the list items and links.</Para><Para><Emphasis Type="BoldItalic">Listing 4-13.</Emphasis><Emphasis Type="Italic">&#x2002;CSS to Style Navigational Links As Tabs</Emphasis><IndexTerm><Primary>CSS3 transitions</Primary><Secondary>horizontal tab navigation</Secondary><Tertiary>CSS to Style Navigational Links</Tertiary></IndexTerm></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">ul[role=navigation] li {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">display: inline; font-family: Futura, Arial, sans-serif;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">text-transform: uppercase;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">ul[role=navigation] li a {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">text-decoration: none; color: #fff;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">padding: 0.8rem 1.2rem 2rem 1.2rem;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">border: 1px solid #777; border-radius: 5px 5px 0 0;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">background: linear-gradient(to bottom, #dfc891, #776c51);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">box-shadow: 0 0 15px rgba(0,0,0,0.5);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">letter-spacing: 0.15rem; text-shadow: 0 1px 0 #000;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>Next, you want to overlap the tabs slightly. You do that by providing a negative <Emphasis FontCategory="NonProportional">margin-left</Emphasis> to each list item. The tabs will be moving up on mouseover, so you deliberately make them longer than they need to be in their normal state. Use <Emphasis FontCategory="NonProportional">overflow: hidden</Emphasis> on the unordered list to hide the excess at the bottom edge, as shown in Listing 4-14.</Para><Para><Emphasis Type="BoldItalic">Listing 4-14.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS to Style Navigational Links As Tabs</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">ul[role=navigation] {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">background: #000;  padding-top: 3.2rem; padding-bottom: 1rem;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">overflow: hidden; margin-top: 0; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">ul[role=navigation] li {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">display: inline; font-family: Futura, Arial, sans-serif;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">text-transform: uppercase; margin-left: -.5rem;  }</Emphasis></Para><Para>The link that represents the current page will have a class of <Emphasis FontCategory="NonProportional">forefront</Emphasis> applied to it. This class will bring the appropriate link on top of and slightly higher than every other tab, by using <Emphasis FontCategory="NonProportional">position: relative</Emphasis>, a negative <Emphasis FontCategory="NonProportional">top</Emphasis> value, and modified <Emphasis FontCategory="NonProportional">z-index</Emphasis> (Listing 4-15).</Para><Para><Emphasis Type="BoldItalic">Listing 4-15.</Emphasis><Emphasis Type="Italic">&#x2002;Placing the Link for the Current Page on Top of the Others</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">ul[role=navigation] li a.</Emphasis>forefront { -0.2rem; z-index: 2;}</Para><Para>You can apply this class using either of the approaches already discussed: by adding it to the markup or dynamically applying it with JavaScript. Finally, you&#x2019;ll raise the links on hover by raising their top position and animate the transition from the default state (Listing 4-16).</Para><Para><Emphasis Type="BoldItalic">Listing 4-16.</Emphasis><Emphasis Type="Italic">&#x2002;Animating the Tab Links</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">ul[role=navigation] li a {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">position: relative; top: 0;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transition: 0.2s all linear;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">...</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">ul[role=navigation] li a:hover,  ul[role=navigation] li a:focus {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">top: -0.6rem;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para></Section1><Section1 ID="Sec6"><Heading>Animating Custom Validation Errors for HTML5 Forms<IndexTerm><Primary>CSS3 transitions</Primary><Secondary>custom validation errors, for HTML5 forms</Secondary></IndexTerm></Heading><Para>Information entered by users into forms is usually checked at least twice: once at the front end (most commonly with JavaScript) and once at the backend (with PHP or some other server-side language). There are several advantages to this method:<UnorderedList Mark="Bullet"><ItemContent><Para><Emphasis Type="Italic">Redundancy</Emphasis><IndexTerm><Primary><Emphasis Type="Italic">CSS3 transitions</Emphasis></Primary><Secondary><Emphasis Type="Italic">custom validation errors, for HTML5 forms</Emphasis></Secondary><Tertiary>redundancy</Tertiary></IndexTerm>: If the client-side validation process fails to work, or if it is blocked or unsupported in the browser, the back-end process will still look for errors.</Para></ItemContent><ItemContent><Para><Emphasis Type="Italic">Immediacy</Emphasis><IndexTerm><Primary><Emphasis Type="Italic">CSS3 transitions</Emphasis></Primary><Secondary><Emphasis Type="Italic">custom validation errors, for HTML5 forms</Emphasis></Secondary><Tertiary>immediacy</Tertiary></IndexTerm>: A client-side solution usually provides instant feedback as the visitor is entering information into a field or after the field loses focus; short of using AJAX or a similar technology, server-side solutions cannot provide a response until the submit button is pressed.</Para></ItemContent><ItemContent><Para><Emphasis Type="Italic">Security</Emphasis><IndexTerm><Primary><Emphasis Type="Italic">CSS3 transitions</Emphasis></Primary><Secondary><Emphasis Type="Italic">custom validation errors, for HTML5 forms</Emphasis></Secondary><Tertiary>security</Tertiary></IndexTerm>: Broadly speaking, a server-side language will offer a far more appropriate and secure way of gaining credit card verification information from VISA and Mastercard than using JavaScript.</Para></ItemContent></UnorderedList></Para><Para>There have been many validation scripts built in JavaScript, but in HTML5 the same ability to validate forms is now natively supported in the browser with the <Emphasis FontCategory="NonProportional">pattern</Emphasis> attribute and two new CSS pseudo-classes:<Emphasis FontCategory="NonProportional">:valid</Emphasis> and<Emphasis FontCategory="NonProportional">:invalid</Emphasis>. In order to demonstrate this you&#x2019;ll create the form shown in Figure <InternalRef RefID="Fig4">4-4</InternalRef>.<Figure ID="Fig4" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 4-4</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>Form Error Messages Animated with CSS3<IndexTerm><Primary>CSS3 transitions</Primary><Secondary>custom validation errors, for HTML5 forms</Secondary><Tertiary>form error messages animated</Tertiary></IndexTerm></SimplePara></CaptionContent></Caption><MediaObject ID="MO4"><ImageObject FileRef="9781430247227_Fig04-04.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>You begin with the basic markup for an accessible form, shown in Listing 4-17.</Para><Para><Emphasis Type="BoldItalic">Listing 4-17.</Emphasis><Emphasis Type="Italic">&#x2002;An Accessible HTML5 Form</Emphasis><IndexTerm><Primary>CSS3 transitions</Primary><Secondary>custom validation errors, for HTML5 forms</Secondary><Tertiary>accessible form</Tertiary></IndexTerm></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;form&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;label for=age accesskey=a&#x003E;Age&#x003C;/label&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;input type=number name=age id=age size=3 maxlength=2 min=1 max=99 &#xF0C9;pattern=&quot;^([1-9]|[1-9][0-9]){1,2}$&#x201D; required &#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;label for=name accesskey=n&#x003E;Name&#x003C;/label&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;input type=text name=name id=name size=40 maxlength=38 &#x2009;&#xF0C9;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">pattern=&quot;^[a-zA-Z]&#x0027;?[- &#x0027;a-zA-Z]+$&quot; placeholder=&quot;Your full name&quot; required &#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;label for=email accesskey=e&#x003E;eMail address&#x003C;/label&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;input type=email name=email id=email size=50 maxlength=256 placeholder=&quot;Your contact</Emphasis> <Emphasis FontCategory="NonProportional">eMail&quot; &#xF0C9; required&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;input type=submit value=submit&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/form&#x003E;</Emphasis></Para><Para>As you can see, you&#x2019;re using a <Emphasis FontCategory="NonProportional">number</Emphasis> field with a <Emphasis FontCategory="NonProportional">min</Emphasis> and <Emphasis FontCategory="NonProportional">max</Emphasis> value to limit the user&#x2019;s age when they enter it, an eMail input, and a standard text input with a regular expression to get the user&#x2019;s name. All inputs are required. (I&#x2019;ve added a <Emphasis FontCategory="NonProportional">pattern</Emphasis> to the <Emphasis FontCategory="NonProportional">number</Emphasis> input even though it is invalid in HTML5 in order to gain enforcement in Firefox 14 and earlier, which recognizes <Emphasis FontCategory="NonProportional">pattern</Emphasis> but not the <Emphasis FontCategory="NonProportional">number</Emphasis> attribute value itself, defaulting the field to a standard text input.) You can use some basic CSS to improve the display of these elements, as shown in Listing 4-18.</Para><Para><Emphasis Type="BoldItalic">Listing 4-18.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS for a Typical Accessible Form</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">form { font-size: 1.2rem; font-family: &quot;Gill Sans&quot;, Arial, sans-serif; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">label,input { display: block; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">label:first-letter { border-bottom: 2px solid #bbb; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input { border: 1px solid #bbb; padding: .4rem; border-radius: .2rem; margin: .5rem 0; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input[type=&quot;submit&quot;] { border: none; text-transform: uppercase; }</Emphasis></Para><Para>The only slightly unusual aspect of this stylesheet is the third declaration, which underlines the first letter of each form label to show the appropriate accesskey for the associated field. To display whether the information entered into the input is right or wrong, you need to add the code in Listing 4-19. (Note the first CSS declaration, which turns off the current default Firefox UA styles for valid and invalid inputs).</Para><Para><Emphasis Type="BoldItalic">Listing 4-19.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS for a Typical Accessible Form</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input:valid, input:invalid {box-shadow: none; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input:valid { border: 2px solid green; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input:invalid { border: 2px solid yellow; }</Emphasis></Para><Para>While you could certainly animate what you have so far, there are a few drawbacks to the form as it is currently presented: the browser defaults to showing the inputs as invalid when the user first sees the page, and there&#x2019;s no indication of exactly <Emphasis Type="Italic">what</Emphasis> the user entered incorrectly.</Para><Para>You can&#x2019;t use pseudo-classes to generate error messages after the inputs because they are replaced elements, but you <Emphasis Type="Italic">can</Emphasis> place the error messages in the <Emphasis FontCategory="NonProportional">title</Emphasis> attribute of spans <Emphasis Type="Italic">after</Emphasis> the inputs. Some examples are shown in Listing 4-20.</Para><Para><Emphasis Type="BoldItalic">Listing 4-20.&#x2002;</Emphasis><Emphasis Type="Italic">Span Elements Added As Validation Error Messages After HTML5 Form Inputs</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;span title=&quot;Must be between 1 and 99&quot;&#x003E;&#x003C;/span&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;span title=&quot;Must a complete valid eMail address&quot;&#x003E;&#x003C;/span&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;span title=&quot;Letters, spaces, apostrophes and hyphens only&quot;&#x003E;&#x003C;/span&#x003E;</Emphasis></Para><Para>Because each <Emphasis FontCategory="NonProportional">span</Emphasis> only contains information in its <Emphasis FontCategory="NonProportional">title</Emphasis> attribute and has no visible content, older browsers that don&#x2019;t fully support CSS3 are disabled from showing any confusing messages to the user. Remove Listing 4-20 from your code and replace it with Listing 4-21.</Para><Para><Emphasis Type="BoldItalic">Listing 4-21.&#x2002;</Emphasis><Emphasis Type="Italic">Styling and Displaying Validation Errors</Emphasis><IndexTerm><Primary>CSS3 transitions</Primary><Secondary>custom validation errors, for HTML5 forms</Secondary><Tertiary>styling and displaying validation errors</Tertiary></IndexTerm></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input + span:after { content: attr(title); color: red; margin-left: 0.6rem; opacity: 0; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input:invalid + span:after { opacity: 1; }</Emphasis></Para><Para>There&#x2019;s an immediate problem: the browser continues to show the inputs as wrong by making the <Emphasis FontCategory="NonProportional">span title</Emphasis> attribute visible the moment the page loads. The reason?</Para><FormalPara Type="Important" RenderingStyle="Style1"><Heading>Tip</Heading><Para>An <Emphasis FontCategory="NonProportional">input</Emphasis> with a <Emphasis FontCategory="NonProportional">required</Emphasis> attribute is evaluated by its <Emphasis FontCategory="NonProportional">pattern</Emphasis> or input <Emphasis FontCategory="NonProportional">type</Emphasis> <Emphasis Type="Italic">before</Emphasis> the user focuses or enters any information into the field.</Para></FormalPara><Para>By removing the <Emphasis FontCategory="NonProportional">required</Emphasis> attribute from the inputs and adding a transition to the error messages, as in Listing 4-22, you achieve the effect you are after. Note that I&#x2019;ve added a delay to the transition: without this, the error message would show immediately on entering the first character in a field. You want a reasonable amount of time to pass before you start telling the user that their information is wrong.</Para><Para><Emphasis Type="BoldItalic">Listing 4-22.</Emphasis><Emphasis Type="Italic">&#x2002;Displaying a Form Validation Error Message After a Delay</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input + span:after { content: attr(title); color: red; margin-left: 0.6rem; opacity: 0;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transition-property: opacity;transition-duration: 2s; transition-delay: 2s;}</Emphasis></Para><Para>You can also show the status of an input&#x2019;s validity by showing a tick inside the form element. Returning to the markup in Listing 4-17 and the CSS in Listing 4-18, add the CSS in Listing 4-23. (You could take this further by turning the <Emphasis>tick.png</Emphasis> into a sprite image and manipulating it to show a cross when the input is invalid).</Para><Para><Emphasis Type="BoldItalic">Listing 4-23.&#x2002;</Emphasis><Emphasis Type="Italic">Displaying a Background Image for Form Input Validation</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input:focus:valid { background-image: url(tick.png); background-repeat: no-repeat;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">background-position: right 6px;  }</Emphasis></Para><Para>You can&#x2019;t fade-in the background image directly (there is, as yet, no direct control for opacity on background images), but you <Emphasis Type="Italic">can</Emphasis> manipulate an image, so if you wanted to fade-in the symbol, you could place the image after the input and transition it as you did the earlier validation messages.</Para><FormalPara Type="Important" RenderingStyle="Style1"><Heading>Note</Heading><Para>You could also turn off the browser&#x2019;s built-in form validation messages entirely via JavaScript, as shown here, using jQuery:</Para></FormalPara><Para Type="Programcode"><Emphasis FontCategory="NonProportional">$(document).ready(function() {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">$(&#x0027;form&#x0027;).bind(&#x0027;invalid&#x0027;, function(e){</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">$(e.target).attr(&#x0027;validity&#x0027;)</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}); });</Emphasis></Para></Section1><Section1 ID="Sec7"><Heading>UI Button Depress Transition<IndexTerm><Primary>CSS3 transitions</Primary><Secondary>UI button depress transition</Secondary></IndexTerm><IndexTerm><Primary>UI button depress transition</Primary></IndexTerm></Heading><Para>With CSS, you can also give the impression of a link or button lowering or sinking into the page, as shown in Figure <InternalRef RefID="Fig5">4-5</InternalRef>.<Figure ID="Fig5" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 4-5</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>A typical button example</SimplePara></CaptionContent></Caption><MediaObject ID="MO5"><ImageObject FileRef="9781430247227_Fig04-05.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>A simple way to achieve this effect is shown in Listing 4-24.</Para><Para><Emphasis Type="BoldItalic">Listing 4-24.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS to Make a Link Lowered When Clicked</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">a:active { position: relative; top: 1px; }</Emphasis></Para><Para>Of course, it is also possible to more elaborately style a link, as in Listing 4-25.</Para><Para><Emphasis Type="BoldItalic">Listing 4-25.</Emphasis><Emphasis Type="Italic">&#x2002;HTML and CSS to Create a Giant Help Button</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;a href=# class=bigbutton&#x003E;help&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">a.bigbutton {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">font-family: &quot;Blue Highway&quot;; text-transform: uppercase; color: #fff;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">background: radial-gradient(center 50px, circle farthest-corner, #ef6634, #c63a17 43%,#ba1a01 45%,#bf6e4e 100%);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">display: inline-block; width: 200px; height: 200px; border-radius: 100%;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">font-size: 70px; text-decoration: none; text-align: center; padding-top: 50px;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">box-sizing: border-box; font-weight: 900;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">box-shadow: 0 8px 0 rgb(183,0,0), 0 15px 20px rgba(0,0,0,.35);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">text-shadow: 0 3px 1px rgba(122,17,8,.8);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">transition: .4s all ease-in;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>Here you create the impression of a 3D button by creating two box shadows: one to create the impression of an edge to the button, and another beneath it as a general shadow. You create the impression of the button lowering by transitioning four simultaneous actions:<OrderedList><ListItem><ItemNumber>1.	</ItemNumber><ItemContent><Para>Lower the text on the button.</Para></ItemContent></ListItem><ListItem><ItemNumber>2.	</ItemNumber><ItemContent><Para>Physically lower the entire button by using translate.</Para></ItemContent></ListItem><ListItem><ItemNumber>3.	</ItemNumber><ItemContent><Para>Reduce the shadow that represents the edge of the button.</Para></ItemContent></ListItem><ListItem><ItemNumber>4.	</ItemNumber><ItemContent><Para>Reduce and harden the blur of the shadow beneath the entire element.</Para></ItemContent></ListItem></OrderedList></Para><Para>You&#x2019;ll do this in a declaration based on the <Emphasis FontCategory="NonProportional">:active</Emphasis> pseudo-selector, as shown in Listing 4-26.</Para><Para><Emphasis Type="BoldItalic">Listing 4-26.&#x2002;</Emphasis><Emphasis Type="Italic">HTML and CSS to Create a Giant Help Button</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">.bigbutton:active {</Emphasis></Para><Para Type="Programcode">   <Emphasis FontCategory="NonProportional">padding-top: 53px;</Emphasis></Para><Para Type="Programcode">   <Emphasis FontCategory="NonProportional">transform: translate(0, 4px);</Emphasis></Para><Para Type="Programcode">   <Emphasis FontCategory="NonProportional">box-shadow: 0 4px 0 rgb(183,0,0), 0 8px 6px rgba(0,0,0,.45);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>It&#x2019;s also possible to create a button reveal effect, as you&#x2019;ll see in the next section.</Para></Section1><Section1 ID="Sec8"><Heading>UI Button Reveal Transition<IndexTerm><Primary>CSS3 transitions</Primary><Secondary>UI button reveal transition</Secondary></IndexTerm><IndexTerm><Primary>UI button reveal transition</Primary></IndexTerm></Heading><Para>Standard HTML <Emphasis FontCategory="NonProportional">button</Emphasis> elements can also be heavily customized with CSS that includes transitions. In this case, you want a button to expand on <Emphasis FontCategory="NonProportional">hover</Emphasis>, revealing a promotional or guiding message inside (see Figure <InternalRef RefID="Fig6">4-6</InternalRef>).<Figure ID="Fig6" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 4-6</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>A button in two modes, transitioned with CSS3</SimplePara></CaptionContent></Caption><MediaObject ID="MO6"><ImageObject FileRef="9781430247227_Fig04-06.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>Your HTML will consist of three elements: a <Emphasis FontCategory="NonProportional">button</Emphasis> with two <Emphasis FontCategory="NonProportional">span</Emphasis> tags inside it. You can see the markup in Listing 4-27.</Para><Para><Emphasis Type="BoldItalic">Listing 4-27.</Emphasis>&#x2002;<Emphasis Type="Italic">HTML for a Reveal Button</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;button&#x003E;Sign up</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;span class=hidden&#x003E;For Free&#x003C;/span&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;span class=right&#x003E;</Emphasis>&#9654;</Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/span&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/button&#x003E;</Emphasis></Para><FormalPara Type="Important" RenderingStyle="Style1"><Heading>Tip</Heading><Para>A Unicode character is far more adaptable and easier to control than an image when used for the right side of your UI element. I&#x2019;ve used a decimal entity character here to represent a black rightward (A great resource for Unicode characters can be found at <Emphasis FontCategory="NonProportional">copypastecharacter.com</Emphasis>.)</Para></FormalPara><Para>Next, you&#x2019;ll add the CSS to set up your button appearance (Listing 4-28).</Para><Para><Emphasis Type="BoldItalic">Listing 4-28.</Emphasis><Emphasis Type="Italic">&#x2002;Basic CSS for a Reveal Button</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">* {box-sizing: border-box;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">color: #333; font-family: Futura, Arial, sans-serif;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">button {</Emphasis></Para><Para Type="Programcode">        <Emphasis FontCategory="NonProportional">font-weight: 600;</Emphasis></Para><Para Type="Programcode">        <Emphasis FontCategory="NonProportional">text-shadow: 0px 1px 1px rgba(255, 255, 255, 0.3);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">border-radius: 34px; height: 68px; width: 180px;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">padding: 0 20px; font-size: 18px;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">background: linear-gradient(to bottom, #1e5799,#7db9e8);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">border: 1px solid rgba(0,0,0,0.4);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">box-shadow: 0px 1px 1px rgba(255, 255, 255, 0.8) inset,</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">1px 1px 3px rgba(0, 0, 0, 0.2),</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">0px 0px 0px 4px rgba(188, 188, 188, 0.5);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">text-align: left;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">span.hidden, span.right  { color: #fff;  }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">span.right { padding-left: 18px;  }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">span.hidden {background: linear-gradient(to bottom, #222, #000);</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">display: inline-block; width: 0; margin-left: 22px;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">overflow: hidden;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">white-space: nowrap; padding: 22px 0;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">border-left: 2px double rgba(0,0,0,0.3); }</Emphasis></Para><Para>Because the <Emphasis FontCategory="NonProportional">.hidden</Emphasis> span is set to <Emphasis FontCategory="NonProportional">box-sizing: border-box</Emphasis>, <Emphasis FontCategory="NonProportional">white-space: nowrap</Emphasis>, <Emphasis FontCategory="NonProportional">overflow: hidden</Emphasis>, and <Emphasis FontCategory="NonProportional">width: 0</Emphasis>, you only see its <Emphasis FontCategory="NonProportional">border</Emphasis> on the left side under normal conditions.</Para><Para>You want multiple transition events to happen at the same time and in the same motion. While you could place the transition properties inside separate declarations, it&#x2019;s often more efficient to place them as high in the CSS as possible.</Para><Para><Emphasis Type="BoldItalic">Listing 4-29.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS for a Button Reveal Transition</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">button { transition: .6s all ease-in-out; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">button:hover { width: 290px; color: #fff; text-shadow: none;  }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">button:hover span.hidden { width: 120px; padding: 22px;  }</Emphasis></Para></Section1><Section1 ID="Sec9"><Heading>Accessible Horizontal Drop-down Navigation with CSS3 Transitions<IndexTerm><Primary>CSS3 transitions</Primary><Secondary>horizontal drop-down navigation</Secondary></IndexTerm><IndexTerm><Primary>Horizontal drop-down navigation</Primary></IndexTerm></Heading><Para>Drop-down menus are a common navigational option for complex websites. Users are already familiar with the format in the UI on their computers, so using the same interface design on websites makes sense. See Figure <InternalRef RefID="Fig7">4-7</InternalRef> for an example.<Figure ID="Fig7" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 4-7</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>A drop-down menu</SimplePara></CaptionContent></Caption><MediaObject ID="MO7"><ImageObject FileRef="9781430247227_Fig04-07.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>Drop-down menus on HTML pages have traditionally been created using Flash or JavaScript, but these tools share a significant disadvantage: menus created with them can be difficult for the disabled to use with screen readers and/or keyboards.</Para><Para>By using ARIA features in HTML5 markup with CSS3 transitions, you get the best of all worlds: UI elements that are accessible, visually appealing, and animated. The basic markup is shown in Listing 4-30.</Para><FormalPara Type="Important" RenderingStyle="Style1"><Heading>Tip</Heading><Para>You can learn a lot more about ARIA roles at <ExternalRef><RefSource><Emphasis FontCategory="NonProportional">www.w3.org/TR/wai-aria/roles</Emphasis></RefSource><RefTarget TargetType="URL" Address="http://www.w3.org/TR/wai-aria/roles"/></ExternalRef>.</Para></FormalPara><Para><Emphasis Type="BoldItalic">Listing 4-30.</Emphasis><Emphasis Type="Italic">&#x2002;HTML for an Accessible Drop-down Menu</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;nav role=navigation aria-label=&quot;Main menu&quot;&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;ul role=menubar&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;li role=menuitem tabindex=0&#x003E;&#x003C;a href=#&#x003E;Home&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;li role=menuitem aria-haspopup=true tabindex=0&#x003E;&#x003C;a href=#&#x003E;Services&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;ul class=submenu role=menu aria-hidden=true&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;li role=menuitem tabindex=-1&#x003E;&#x003C;a href=#&#x003E;Abrasion&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;li role=menuitem tabindex=-1&#x003E;&#x003C;a href=#&#x003E;Peel&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;li role=menuitem tabindex=-1&#x003E;&#x003C;a href=#&#x003E;Wax&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/ul&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;li role=menuitem tabindex=0&#x003E;&#x003C;a href=#&#x003E;Contact&#x003C;/a&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/ul&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/nav&#x003E;</Emphasis></Para><Para>The code resembles what you started with in Listing 4-1 (without accesskeys, which have been omitted in this example to save space). The navigation role has moved back onto the <Emphasis FontCategory="NonProportional">nav</Emphasis> element, which has also gained a label describing its purpose, the assistive equivalent of a title tooltip.</Para><Para>Each list item has a role of <Emphasis FontCategory="NonProportional">menuitem</Emphasis>, indicating that it is actionable, and a <Emphasis FontCategory="NonProportional">tabindex</Emphasis> of either <Emphasis FontCategory="NonProportional">0</Emphasis> (indicating that it can be jumped between by using the TAB key) or <Emphasis FontCategory="NonProportional">-1</Emphasis> (meaning that other controls, such as the arrow keys, must be used to focus them). Finally, the list item containing the submenu has an <Emphasis FontCategory="NonProportional">aria-haspopup</Emphasis> attribute and the submenu itself has an <Emphasis FontCategory="NonProportional">aria-hidden</Emphasis> attribute to indicate that it is not visible by default.</Para><Para>To this, you&#x2019;re going to add some basic CSS, shown in Listing 4-31.</Para><Para><Emphasis Type="BoldItalic">Listing 4-31.</Emphasis>&#x2002;<Emphasis Type="Italic">Code for a CSS3 Drop-down Menu</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">body { font-family: Futura, Arial, sans-serif; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav { height: 41px;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">background: linear-gradient(to bottom, rgb(93,146,207) 0%, rgb(79,79,181) 100%); }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav ul { margin: 0; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav, ul.submenu { background: #35f; border-radius: 5px;  padding: 0;  }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav ul li { display: block; width: 150px; text-align: center; float: left; margin: 0; padding: 0;  }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav li:hover { background: rgba(0,0,0,0.4); }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav a { color: #fff; text-decoration: none; display: block; padding: 10px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav ul.submenu { background: rgba(0,0,0,0.8); position: relative; border-radius: 0 0 5px 5px; height: 0px; overflow: hidden; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav ul.submenu li { float: none; text-align: left; border-bottom: 1px solid rgba(0,0,0,0.3); }</Emphasis></Para><Para>The code in Listing 4-31 should be fairly self-explanatory: the main list items are floated side by side, with the submenu placed below and, in this case, hidden, by setting its height to 0.</Para><Para>The implementation of CSS3 in most current browsers requires you to set explicit measurements when transitioning an element&#x2019;s dimensions; neither <Emphasis FontCategory="NonProportional">height: 100%</Emphasis> nor <Emphasis FontCategory="NonProportional">height: auto</Emphasis> will work in this case. Additionally, you want the same transition effect to be added to multiple elements; rather than repeating yourself, you add the declaration at the top of Listing 4-32.</Para><Para><Emphasis Type="BoldItalic">Listing 4-32.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS for an Animated Drop-down Menu</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav ul li { transition: .3s all linear; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">nav ul li:hover ul.submenu { height: 126px;  }</Emphasis></Para><Para>This markup and CSS can become the basis of many interface designs. For example, with some small adjustments, vertically expanding &#x201C;accordion&#x201D; menus can also follow this template.</Para></Section1><Section1 ID="Sec10"><Heading>Initiating CSS3 Transition Effects After a Button Click<IndexTerm><Primary>CSS3 transitions</Primary><Secondary>button click effects</Secondary></IndexTerm></Heading><Para>In most standard HTML, there&#x2019;s no way of recording state; that is, you can capture the action of the user&#x2019;s mouse over an element (<Emphasis FontCategory="NonProportional">:hover</Emphasis>), pressed down (<Emphasis FontCategory="NonProportional">:active</Emphasis>), and in some cases, entered within an element (<Emphasis FontCategory="NonProportional">:focus</Emphasis>), but there are few immediately obvious ways of saying &#x201C;if this element is clicked, do this; but if it&#x2019;s off, undo the action.&#x201D;</Para><Para>You do have a few options with CSS, however. The state of both the checkbox and radio elements is readable by CSS through the use of the <Emphasis FontCategory="NonProportional">:checked</Emphasis> pseudo-class. By hiding the checkbox but maintaining accessibility through the use of an associated <Emphasis FontCategory="NonProportional">label</Emphasis> element you can use CSS to &#x201C;switch&#x201D; the presentation of the page.</Para><FormalPara Type="Important" RenderingStyle="Style1"><Heading>Note</Heading><Para>While the techniques I&#x2019;ll discuss next are valid in HTML5 (which allows you to place form elements anywhere on a page), they are semantically questionable. There is a school of thought that claims that form elements should only be used within forms, and that these kinds of behaviors should be relegated exclusively to JavaScript. You should be aware of this contention before proceeding with the following techniques.</Para></FormalPara><Para>Next, I will demonstrate how to achieve the image shown in Figure <InternalRef RefID="Fig8">4-8</InternalRef>.<Figure ID="Fig8" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 4-8</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>An image and description of Mars<IndexTerm><Primary>CSS3 transitions</Primary><Secondary>button click effects</Secondary><Tertiary>Mars image</Tertiary></IndexTerm> shown with an element clicked (image courtesy of NASA)</SimplePara></CaptionContent></Caption><MediaObject ID="MO8"><ImageObject FileRef="9781430247227_Fig04-08.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>Your markup will consist of a container <Emphasis FontCategory="NonProportional">div</Emphasis>, a checkbox <Emphasis FontCategory="NonProportional">input</Emphasis>, and an inner <Emphasis FontCategory="NonProportional">div</Emphasis> containing some content, per Listing 4-33.</Para><Para><Emphasis Type="BoldItalic">Listing 4-33.</Emphasis>&#x2002;<Emphasis Type="Italic">Checkbox Markup to Open and Close an Associated div</Emphasis><IndexTerm><Primary>CSS3 transitions</Primary><Secondary>button click effects</Secondary><Tertiary>checkbox markup</Tertiary></IndexTerm></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;div id=mars&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;input type=checkbox id=marstoggle&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;div class=toggle&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;img src=mars.jpg alt=Mars&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;p&#x003E;Trace amounts of methane were discovered in the atmosphere of Mars in 2003... &#xF0C9;As </Emphasis><Emphasis FontCategory="NonProportional">methane is unstable, its presence indicates an active source on the planet that is &#xF0C9;continually </Emphasis><Emphasis FontCategory="NonProportional">replenishing the gas, at the rate of approximately 270 tons per year. &#x2009;&#xF0C9;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/div&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/div&#x003E;</Emphasis></Para><Para>You&#x2019;ll style the outer <Emphasis FontCategory="NonProportional">div</Emphasis> and its content using the code in Listing 4-34.</Para><Para><Emphasis Type="BoldItalic">Listing 4-34.</Emphasis>&#x2002;<Emphasis Type="Italic">div for Popup Text</Emphasis><IndexTerm><Primary>CSS3 transitions</Primary><Secondary>button click effects</Secondary><Tertiary>popup text</Tertiary></IndexTerm></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">div#mars { background: #000; color: #fff;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">font-family: Futura, Arial, sans-serif;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">width: 400px; padding: 1.6rem;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">line-height: 175%; border-radius: 6px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">img { display: block; margin: 0 auto; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">div#mars p { margin: 1rem; }</Emphasis></Para><Para>You want to hide the inner <Emphasis FontCategory="NonProportional">div</Emphasis> by using a sibling selector to set its <Emphasis FontCategory="NonProportional">height</Emphasis> to <Emphasis FontCategory="NonProportional">0</Emphasis> and by hiding anything that falls outside it. At the same time you&#x2019;ll also set the transition using the principles of push-pull animation discussed earlier. (See Listing 4-35.)</Para><Para><Emphasis Type="BoldItalic">Listing 4-35.</Emphasis>&#x2002;<Emphasis Type="Italic">Transition for Opening and Closing a div</Emphasis><IndexTerm><Primary>CSS3 transitions</Primary><Secondary>button click effects</Secondary><Tertiary>opening and closing div</Tertiary></IndexTerm></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input &#x223C; div { overflow: hidden; height: 0; transition: .6s all cubic-bezier(0.735, -0.485,</Emphasis> &#x2009;&#xF0C9;</Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">0.145, 1.625);   }</Emphasis></Para><Para>To complete the basic functionality of your interactive element you want to expand the inner <Emphasis FontCategory="NonProportional">div</Emphasis> if the checkbox is turned on. As I mentioned, <Emphasis FontCategory="NonProportional">height</Emphasis> needs to be set explicitly for elements to transition correctly in current browsers (see Listing 4-36).</Para><Para><Emphasis Type="BoldItalic">Listing 4-36.</Emphasis>&#x2002;<Emphasis Type="Italic">div for Popup Text</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input:checked &#x223C; div { height: 480px; }</Emphasis></Para><Para>This works great here, but hiding and showing page content with a radio button will probably not work well for most designs. To get around this, you can associate a <Emphasis FontCategory="NonProportional">label</Emphasis> with the <Emphasis FontCategory="NonProportional">input</Emphasis>, &#x201C;linking&#x201D; the text of the <Emphasis FontCategory="NonProportional">label</Emphasis> to the <Emphasis FontCategory="NonProportional">checkbox</Emphasis> by using the <Emphasis FontCategory="NonProportional">for</Emphasis> attribute. As a result, clicking the <Emphasis FontCategory="NonProportional">label</Emphasis> will turn on the form element and cause your CSS to continue to respond, even if the checkbox itself is hidden (see Listing 4-37).</Para><Para><Emphasis Type="BoldItalic">Listing 4-37.&#x2002;</Emphasis><Emphasis Type="Italic">Complete Markup for a Checkbox-Associated div</Emphasis><IndexTerm><Primary>CSS3 transitions</Primary><Secondary>button click effects</Secondary><Tertiary>markup, for checkbox-associated div</Tertiary></IndexTerm></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;div id=mars&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;label for=marstoggle&#x003E;Mars&#x003C;/label&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;input type=checkbox class=toggle id=marstoggle&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;div&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;img src=mars.jpg alt=Mars&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;p&#x003E;Trace amounts of methane were discovered in the atmosphere of Mars in 2003...</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/div&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/div&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">label { display: block; text-align: center; font-size: x-large;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">background: red; border-radius: 6px; padding: .2rem; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">label:hover { background: yellow; color: #000; cursor: pointer; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input { display: none; }</Emphasis></Para><Para>If you are willing to disregard some issues of semantics, there are many possibilities for this checkbox control. It can even be used in menus to hold states open (for example, as a series of tabs with content underneath, or as an accordion menu).</Para></Section1><Section1 ID="Sec11"><Heading>Animating Form Elements with CSS3<IndexTerm><Primary>CSS3 transitions</Primary><Secondary>form elements animation</Secondary></IndexTerm></Heading><Para>It&#x2019;s possible to extend transitions to modify the appearance of form elements directly. A simple example would be a visual &#x201C;wobble and fade-in&#x201D; when information entered into a text element is incorrect, as shown in Listing 4-38 and Figure <InternalRef RefID="Fig9">4-9</InternalRef>.</Para><Para><Emphasis Type="Italic">Listing 4-38.&#x2002;CSS for Simple Animated Form Elements</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input { padding: 1rem; transition: .5s 2s all cubic-bezier(0.475, -0.600, 0.435, 1.650);   }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input:invalid { border: 3px solid red; transform: translateX(10px); }</Emphasis><Figure ID="Fig9" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 4-9</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>An animated, customized set of radio buttons</SimplePara></CaptionContent></Caption><MediaObject ID="MO9"><ImageObject FileRef="9781430247227_Fig04-09.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>With some caveats, you can extend this to radio buttons, using a technique first proposed by Simurai (<ExternalRef><RefSource><Emphasis FontCategory="NonProportional">http://simurai.com/</Emphasis></RefSource><RefTarget TargetType="URL" Address="http://simurai.com/"/></ExternalRef>). The basic markup is very simple: each radio button has the same name, meaning that each button turns the others off when clicked. One radio button is automatically on by default, as shown in Listing 4-39.</Para><Para><Emphasis Type="BoldItalic">Listing 4-39.</Emphasis>&#x2002;<Emphasis Type="Italic">HTML for Animated Radio Buttons</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;input type=&quot;radio&quot; name=&quot;radiobutton&quot; checked&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;input type=&quot;radio&quot; name=&quot;radiobutton&quot;&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;input type=&quot;radio&quot; name=&quot;radiobutton&quot;&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;input type=&quot;radio&quot; name=&quot;radiobutton&quot;&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;input type=&quot;radio&quot; name=&quot;radiobutton&quot;&#x003E;</Emphasis></Para><Para>Next comes the CSS, shown in Listing 4-40.</Para><Para><Emphasis Type="Bold">Listing 4-40.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS for Animated Radio Buttons</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">body, input { background-color: rgb(20%,20%,20%); }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input {</Emphasis></Para><Para Type="Programcode">     <Emphasis FontCategory="NonProportional">appearance: none;</Emphasis></Para><Para Type="Programcode">     <Emphasis FontCategory="NonProportional">margin: 10px; width: 22px; height: 22px;</Emphasis></Para><Para Type="Programcode">     <Emphasis FontCategory="NonProportional">border-radius: 50%; cursor: pointer;</Emphasis></Para><Para Type="Programcode">     <Emphasis FontCategory="NonProportional">vertical-align: middle;</Emphasis></Para><Para Type="Programcode">     <Emphasis FontCategory="NonProportional">box-shadow: hsla(0,0%,100%,.15) 0 1px 1px, inset rgba(0,0,0,.5) 0 0 0 1px;</Emphasis></Para><Para Type="Programcode">     <Emphasis FontCategory="NonProportional">background-color: rgb(20%,20%,20%);</Emphasis></Para><Para Type="Programcode">        <Emphasis FontCategory="NonProportional">background-image: radial-gradient(</Emphasis></Para><Para Type="Programcode">        <Emphasis FontCategory="NonProportional">hsla(0,100%,90%,1) 0%,</Emphasis></Para><Para Type="Programcode">        <Emphasis FontCategory="NonProportional">hsla(0,100%,70%,1) 15%,</Emphasis></Para><Para Type="Programcode">        <Emphasis FontCategory="NonProportional">hsla(0,100%,60%,.3) 28%,</Emphasis></Para><Para Type="Programcode">        <Emphasis FontCategory="NonProportional">hsla(0,100%,30%,0) 70%</Emphasis></Para><Para Type="Programcode">    <Emphasis FontCategory="NonProportional">);</Emphasis></Para><Para Type="Programcode">      <Emphasis FontCategory="NonProportional">background-repeat: no-repeat;</Emphasis></Para><Para Type="Programcode">      <Emphasis FontCategory="NonProportional">transition-property: background-position, transform;</Emphasis></Para><Para Type="Programcode">      <Emphasis FontCategory="NonProportional">transition-duration: .15s, .25s;</Emphasis></Para><Para Type="Programcode">       <Emphasis FontCategory="NonProportional">transition-timing-function: cubic-bezier(.8, 0, 1, 1);</Emphasis></Para><Para Type="Programcode">     <Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input:checked {</Emphasis></Para><Para Type="Programcode">     <Emphasis FontCategory="NonProportional">transition-property: background-position, transform;</Emphasis></Para><Para Type="Programcode">     <Emphasis FontCategory="NonProportional">transition-duration: .2s, .25s;</Emphasis></Para><Para Type="Programcode">     <Emphasis FontCategory="NonProportional">transition-delay: .15s, 0s;</Emphasis></Para><Para Type="Programcode">     <Emphasis FontCategory="NonProportional">transition-timing-function: cubic-bezier(0, 0, .2, 1);</Emphasis></Para><Para Type="Programcode">   <Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input:active { transform: scale(1.5); transition: transform .1s cubic-bezier(0, 0, .2, 1); }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input,input:active { background-position: 22px 0; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input:checked { background-position: 0 0; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">input:checked &#x223C; input, input:checked &#x223C; input:active { background-position: -22px 0; }</Emphasis></Para><FormalPara Type="Important" RenderingStyle="Style1"><Heading>Note</Heading><Para>The <Emphasis FontCategory="NonProportional">appearance</Emphasis> property is intended to remove all preconfigured default styles from an element or to allow elements to take on the look of other elements (for example, to style a <Emphasis FontCategory="NonProportional">span</Emphasis> as a <Emphasis FontCategory="NonProportional">textbox</Emphasis>). <Emphasis FontCategory="NonProportional">appearance</Emphasis> was proposed for CSS3, but did not enter the spec of the UI Module, although it is being considered for future iterations of the specification. The property has prefixed support in Webkit, and partial prefixed support in Firefox. For that reason, at the time of writing this, the code shown in Listing 4-40 will work best in Chrome.</Para></FormalPara><Para>Once you get past the complexities of the <Emphasis FontCategory="NonProportional">hsla</Emphasis> color gradient (great for creating different colored &#x201C;tell-tale&#x201D; lights) the rest of the code is simple: the radio buttons are made larger on focus, and on release the background-image of the radial gradient moves to the position of the button.</Para></Section1><Section1 ID="Sec12"><Heading>Summary</Heading><Para>In this chapter you&#x2019;ve looked at some of the ways CSS3 transitions can be used to enhance user interface elements, from forms to site navigation. There are an endless number of possibilities, which I will leave to your imagination and experimentation.</Para><Para>For all their usefulness, transitions are limited by two facts: they rely on some sort of user action to start them, and they always animate between two points or states. Moving objects in a curve is impossible with transitions, as is having them loop or run by themselves. All of those features are the purview of the CSS Animations module (which I refer to as &#x201C;keyframe animations&#x201D; to further distinguish them from transitions). I will be discussing that module in the next chapter.</Para></Section1></Body><BodyRef FileRef="9781430247227_04_OnlinePDF.pdf" TargetType="OnlinePDF"/></Chapter>