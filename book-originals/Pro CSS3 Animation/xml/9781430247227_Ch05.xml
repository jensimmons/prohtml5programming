<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE Chapter PUBLIC "-//Springer-Verlag//DTD A++ V2.4//EN" "http://devel.springer.de/A++/V2.4/DTD/A++V2.4.dtd"> <Chapter  Language="En" OutputMedium="All" ID="b9781430247227_5"><ChapterInfo Language="En" ChapterType="OriginalPaper" NumberingStyle="ChapterOnly" TocLevels="0" ContainsESM="No" OutputMedium="All"><ChapterID>5</ChapterID><ChapterNumber>Chapter 5</ChapterNumber><ChapterDOI>10.1007/9781430247227_5</ChapterDOI><ChapterSequenceNumber>0</ChapterSequenceNumber><ChapterTitle Language="En">CSS3 Keyframe Animations<IndexTerm><Primary>CSS3 keyframe animations</Primary></IndexTerm></ChapterTitle><ChapterFirstPage>75</ChapterFirstPage><ChapterLastPage>84</ChapterLastPage><ChapterCopyright><CopyrightHolderName>Springer-Verlag</CopyrightHolderName><CopyrightYear>2012</CopyrightYear></ChapterCopyright><ChapterHistory><OnlineDate><Year><?InsertOnReleaseOF OFYear?></Year><Month><?InsertOnReleaseOF OFMonth?></Month><Day><?InsertOnReleaseOF OFDay?></Day></OnlineDate></ChapterHistory></ChapterInfo><ChapterHeader><Abstract ID="Abs1" Language="En" OutputMedium="Online"><Heading>Abstract</Heading><Para>For creating simple animations of elements between two states, CSS transitions are easy to implement and use, but this simplicity comes with several significant limitations. To create more complex animations with a greater degree of control you need the CSS Animations module. I&#x2019;ll refer to the animations created by the CSS Animations Module as <Emphasis Type="Italic">keyframe animations</Emphasis> to further distinguish them from transitions.</Para></Abstract></ChapterHeader><Body><Para>For creating simple animations of elements between two states, CSS transitions are easy to implement and use, but this simplicity comes with several significant limitations. To create more complex animations with a greater degree of control you need the CSS Animations module. I&#x2019;ll refer to the animations created by the CSS Animations Module as <Emphasis Type="Italic">keyframe animations</Emphasis> to further distinguish them from transitions.</Para><Para>If you are more familiar with animation tools like Flash, or come from a video or film background, the time-based, &#x201C;frameless&#x201D; approach that CSS keyframe animations use may seem a little confusing at first. To ensure that everyone starts with the same understanding, I&#x2019;ll define keyframes and tweening, then look at how they are implemented by the CSS Animations module.</Para><Section1 ID="Sec1"><Heading>Keyframes and Tweening<IndexTerm><Primary>CSS3 keyframe animations</Primary><Secondary>tweening process</Secondary></IndexTerm><IndexTerm><Primary>Tweening process</Primary></IndexTerm></Heading><Para>Modern animation has inherited the terminology and processes of traditional hand-drawn, cel-shaded animation developed by Disney and other animators in the early 20<Superscript>th</Superscript> century. After character studies, sketches, and a script were completed, animation development went something like this:<OrderedList><ListItem><ItemNumber>1.	</ItemNumber><ItemContent><Para>The major frames of a sequence were drawn by a supervising animator. (At the Disney Studios, this would probably have been one of the &#x201C;Nine Old Men,&#x201D; master animators who created the establishing shots.) In a feature like <Emphasis Type="Italic">Dumbo</Emphasis>, for example, a sequence in which Dumbo tries to fly by flapping his ears might include two <Emphasis Type="Italic">keyframes</Emphasis>: one frame with Dumbo&#x2019;s ears up, the other with his ears down.</Para></ItemContent></ListItem><ListItem><ItemNumber>2.	</ItemNumber><ItemContent><Para>Confining the animation to only these two frames, however, would have made the sequence look extremely jerky (or made Dumbo appear to fly like a hummingbird). To create a smoother animation sequence, the keyframes were handed off to an &#x201C;inbetweener,&#x201D; a lower-level animator who would draw the intermediate frames required, using the first and last keyframe as a reference. This process became known as <Emphasis Type="Italic">tweening.</Emphasis></Para></ItemContent></ListItem><ListItem><ItemNumber>3.	</ItemNumber><ItemContent><Para>The complete sequence would be inked, colorized, and aligned. Played back at 24 frames per second, the transition between each drawing would appear fluid, creating a seamless animation.</Para></ItemContent></ListItem></OrderedList></Para><Para>Today, you are the master animator, with the browser taking the role of inbetweener. Creating a good CSS3 animation is a matter of providing the browser with complete keyframes with enough information to tween smoothly between them. The browser is obliged to make a number of assumptions when tweening. Poor animations are usually the result of not supplying the stylesheet with enough information about the elements, or making assumptions that are contrary to those built into CSS3.</Para><FormalPara Type="Important" RenderingStyle="Style1"><Heading>Note</Heading><Para>Smooth playback of animation sequences occurs if a new frame is shown approximately every 50 milliseconds, depending on the speed of motion on the screen. Keeping true to the principles of CSS, the Animations Module does not attempt to define the playback rate or the number of frames shown per second (FPS). All CSS animation is defined by states (<Emphasis Type="Italic">to</Emphasis> and <Emphasis Type="Italic">from</Emphasis> a state) or how long a sequence takes (<Emphasis Type="Italic">time before</Emphasis> and <Emphasis Type="Italic">time after</Emphasis> a state). The rest is left up to the browser or client. You can absolutely optimize your CSS declarations to reduce the load on the browser and create a more efficient animation, but you do not create your sequences &#x201C;frame-by-frame&#x201D; (with the possible exception of step transitions, discussed in Chapter 3), and you cannot define a frame rate.</Para></FormalPara></Section1><Section1 ID="Sec2"><Heading>CSS3 Keyframe Animation Syntax<IndexTerm><Primary>CSS3 keyframe animations</Primary><Secondary>syntax</Secondary></IndexTerm></Heading><Para>A keyframe animation always starts with an animation name which, as with an id value, must be unique. If two keyframe sequences have the same name, only the last one will be recognized. The animation sequence itself may be specified in two ways. The first of these is as a <Emphasis FontCategory="NonProportional">from ... to</Emphasis> declaration, as shown in Listing 5-1.</Para><Para><Emphasis Type="BoldItalic">Listing 5-1.</Emphasis><Emphasis Type="Italic">&#x2002;Keyframes for a Simple Left-to-Right Animation</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">@keyframes slide {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">from { left: 0; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">to {left: 100%; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>The animation can also be specified as percentage in time, shown in Listing 5-2.</Para><Para><Emphasis Type="BoldItalic">Listing 5-2.</Emphasis><Emphasis Type="Italic">&#x2002;Multiple Keyframes for a Complex Animation</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">@keyframes multislide {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">0% { left: 20px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">20% { right: 200px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">80% { left: 50px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">100% { right: 180px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>If you do not explicitly define start or end states (<Emphasis FontCategory="NonProportional">from/0%</Emphasis> or <Emphasis FontCategory="NonProportional">to/100%)</Emphasis> in your animation declaration, the browser will interpolate from or to the initial or final states of the element(s). You can also create a hybrid of keywords and values  in the declaration, as shown in Listing 5-3.</Para><Para><Emphasis Type="BoldItalic">Listing 5-3.&#x2002;</Emphasis><Emphasis Type="Italic">A Keyframe Sequence with a Mix of Keywords and Percentage Values</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">@keyframes multislide {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">20% { right: 200px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">80% { left: 50px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">to { right: 180px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>Because it only describes two states, the CSS Animation syntax shown in Listing 5-1 produces a result that is essentially equivalent to a transition, although the animation method still retains several advantages over a transition sequence, as you will see shortly.</Para><Para>Practically, the keyframe sequences can be written anywhere in your CSS, but I recommend that in most cases you keep them at the top of your stylesheet, alongside any <Emphasis FontCategory="NonProportional">@font-face</Emphasis> declarations, for easy reference. You may wish to place very long sequences at the bottom of the stylesheet (to get them out of the way) or even keep them as a separate .css file (brought into your page via <Emphasis FontCategory="NonProportional">@import</Emphasis> or &#x2009;<Emphasis FontCategory="NonProportional">&#x003C; &#x2009;link &#x2009;&#x003E;), although this adds a separate HTTP request.</Emphasis></Para><Para>You call the CSS keyframe animation sequence by applying separate CSS properties to an element, shown in Listing 5-4.</Para><Para><Emphasis Type="BoldItalic">Listing 5-4.</Emphasis>&#x2002;<Emphasis Type="Italic">Calling a CSS Keyframe Animation Sequence</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">#redbox {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">background-color: red;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">width: 100px; height: 150px;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-name: slide;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-duration: 5s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-timing-function: ease-in;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>As you can see, these properties (with the exception of <Emphasis FontCategory="NonProportional">animation-name</Emphasis>), are very much like those for transitions introduced in Chapter 3, and they have much the same function. One difference is that <Emphasis FontCategory="NonProportional">animation-duration</Emphasis> can be set to the infinite keyword, rather than time in seconds or milliseconds. The Animation module also has the <Emphasis FontCategory="NonProportional">animation-delay</Emphasis> property, and adds<Emphasis FontCategory="NonProportional"> animation-iteration-count</Emphasis>, <Emphasis FontCategory="NonProportional">animation-direction, animation-play-state</Emphasis> and <Emphasis FontCategory="NonProportional">animation-fill-mode</Emphasis>.</Para><Para>The animation can also be called in a single <Emphasis FontCategory="NonProportional">animation</Emphasis> shortcut property, as shown in Listing 5-5.</Para><Para><Emphasis Type="BoldItalic">Listing 5-5.</Emphasis>&#x2002;<Emphasis Type="Italic">Calling a CSS Keyframe Animation Sequence with a Shortcut</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">#redbox { animation: slide 5s ease-in 2s; }</Emphasis></Para><Para>The animation values may be declared in any order, with the exception of the <Emphasis FontCategory="NonProportional">duration</Emphasis> and <Emphasis FontCategory="NonProportional">delay</Emphasis> values, which must be stated with <Emphasis FontCategory="NonProportional">duration</Emphasis> first and <Emphasis FontCategory="NonProportional">delay</Emphasis> following.</Para></Section1><Section1 ID="Sec3"><Heading>Support for Keyframe Animation in Older Browsers<IndexTerm><Primary>CSS3 keyframe animations</Primary><Secondary>older browsers support</Secondary></IndexTerm></Heading><Para>Older browsers require vendor prefixes, as already discussed for transitions. This is complicated by the fact that the <Emphasis FontCategory="NonProportional">@keyframes</Emphasis> declaration also needs prefixing, as shown in Listing 5-6.</Para><Para><Emphasis Type="BoldItalic">Listing 5-6.</Emphasis><Emphasis Type="Italic">&#x2002;Calling a CSS Keyframe Animation Sequence for Older Webkit Browsers</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">@-webkit-keyframes multislide {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">0% { left: 20px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">20% { right: 200px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">80% { left: 50 &#x2009;%; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">100% { right: 180px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">#bluebox {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">width: 100px; height: 150px;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-animation-name: multislide;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-animation-duration: 10.5s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-animation-timing-function: ease-in-out;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">-webkit-animation-delay: 200ms;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>This repetition obviously builds up as you write in support for other older browser versions; some of the tools discussed in Chapter 10 can ease and automate this process.</Para></Section1><Section1 ID="Sec4"><Heading>Controlling Keyframe Animation Playback<IndexTerm><Primary>CSS3 keyframe animations</Primary><Secondary>playback control</Secondary></IndexTerm></Heading><Para>If you try to play back the animation you have created, you&#x2019;ll see that the element resets to its initial state. If you want the element to stop at the final frame, you have several options.<UnorderedList Mark="Bullet"><ItemContent><Para>Set a long <Emphasis FontCategory="NonProportional">animation-duration</Emphasis> for the element, letting it essentially take forever to get to the final frame.</Para></ItemContent><ItemContent><Para>Set the <Emphasis FontCategory="NonProportional">animation-direction</Emphasis> so that the element winds up in the same place.</Para></ItemContent><ItemContent><Para>Set <Emphasis FontCategory="NonProportional">animation-fill-mode</Emphasis> to <Emphasis FontCategory="NonProportional">forwards</Emphasis>.</Para></ItemContent></UnorderedList></Para><Para>The <Emphasis FontCategory="NonProportional">animation-fill-mode</Emphasis> is rather oddly named, but serves a particular purpose, shown in Table <InternalRef RefID="Tab1">5-1</InternalRef>.<Table ID="Tab1" Float="Yes"><Caption Language="En"><CaptionNumber>Table 5-1.</CaptionNumber><CaptionContent><SimplePara>Animation fill-mode Property Values<IndexTerm><Primary>CSS3 keyframe animations</Primary><Secondary>animation-fill-mode property values</Secondary></IndexTerm></SimplePara></CaptionContent></Caption><tgroup cols="2"><colspec colnum="1" colname="c1"/><colspec colnum="2" colname="c2"/><thead><row><entry colname="c1"><SimplePara>Fill Mode</SimplePara></entry><entry colname="c2"><SimplePara>Description</SimplePara></entry></row></thead><tbody><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">forwards</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara>Element position ends on final frame.</SimplePara></entry></row><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">backwards</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara>Element returns to position of first frame.</SimplePara></entry></row><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">both</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara>Sets the element to the position of the first keyframe immediately on page load, regardless of the element&#x2019;s default location in other CSS. Only applicable if <Emphasis FontCategory="NonProportional">animation-delay</Emphasis> has a value greater than 0.</SimplePara></entry></row><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">none</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara>Element starts and ends at initial default position provided by CSS outside of keyframes.</SimplePara></entry></row></tbody></tgroup></Table></Para><Para>You can also return animation sequences using <Emphasis FontCategory="NonProportional">animation-direction</Emphasis>, as shown in Table <InternalRef RefID="Tab2">5-2</InternalRef>.<Table ID="Tab2" Float="Yes"><Caption Language="En"><CaptionNumber>Table 5-2.</CaptionNumber><CaptionContent><SimplePara>Animation-direction Property Values<IndexTerm><Primary>CSS3 keyframe animations</Primary><Secondary>animation-direction property values</Secondary></IndexTerm></SimplePara></CaptionContent></Caption><tgroup cols="2"><colspec colnum="1" colname="c1"/><colspec colnum="2" colname="c2"/><thead><row><entry colname="c1"><SimplePara>Animation Direction</SimplePara></entry><entry colname="c2"><SimplePara>Description</SimplePara></entry></row></thead><tbody><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">normal</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara>Animation plays forward normally</SimplePara></entry></row><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">alternate</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara>Animation plays forward then reverses, returning to its initial position</SimplePara></entry></row><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">reverse</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara>Animation plays backward</SimplePara></entry></row><row><entry colname="c1"><SimplePara><Emphasis FontCategory="NonProportional">alternate-reverse</Emphasis></SimplePara></entry><entry colname="c2"><SimplePara>Animation plays backward on the first playthrough, reverses for normal playback on the second</SimplePara></entry></row></tbody></tgroup></Table></Para></Section1><Section1 ID="Sec5"><Heading>Blending and Chaining Keyframe Animations<IndexTerm><Primary>CSS3 keyframe animations</Primary><Secondary>blending and chaining</Secondary></IndexTerm></Heading><Para>Merging multiple keyframe animations is very similar to merging transitions<IndexTerm><Primary>CSS3 keyframe animations</Primary><Secondary>blending and chaining</Secondary><Tertiary>merging transitions</Tertiary></IndexTerm>, as shown in Listing 5-7.</Para><Para><Emphasis Type="BoldItalic">Listing 5-7.</Emphasis>&#x2002;<Emphasis Type="Italic">Blending multiple keyframe animations on one element</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">@keyframes lefttoright {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">0% { left: 0; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">100% { left: 800px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">@keyframes toptobottom {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">0% { top: 0; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">25% { top: 100px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">50% { top: 0; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">75% { top: 100px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">100% { top: 0; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">#box { background: red; width: 100px; height: 100px; position: absolute;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-name: lefttoright, toptobottom;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-duration: 4s, 2s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-timing-function: ease-in, ease-in-out;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>The plotted result of combining these two animation sequences is shown in Figure <InternalRef RefID="Fig1">5-1</InternalRef>.<Figure ID="Fig1" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 5-1</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>A merged CSS3 animation</SimplePara></CaptionContent></Caption><MediaObject ID="MO1"><ImageObject FileRef="9781430247227_Fig05-01.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>This animation can be changed by keeping the same keyframes but altering their duration, as shown in Listing 5-8.</Para><Para><Emphasis Type="BoldItalic">Listing 5-8.&#x2002;</Emphasis><Emphasis Type="Italic">A Merged CSS3 Animation Altered by Changing the Keyframe Durations</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">#box { background: red; width: 100px; height: 100px; position: absolute;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-name: lefttoright, toptobottom;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-duration: 3s, 6s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-timing-function: ease-in, ease-in-out;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-fill-mode: both;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>The result is diagrammed in Figure <InternalRef RefID="Fig2">5-2</InternalRef>.<Figure ID="Fig2" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 5-2</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>Movement of an element after changing the values of animation-duration<IndexTerm><Primary>CSS3 keyframe animations</Primary><Secondary>blending and chaining</Secondary><Tertiary>animation-duration</Tertiary></IndexTerm></SimplePara></CaptionContent></Caption><MediaObject ID="MO2"><ImageObject FileRef="9781430247227_Fig05-02.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>It is also possible to &#x201C;chain&#x201D; keyframe animation sequences by introducing a delay between them, shown in Listing 5-9 and Figure <InternalRef RefID="Fig3">5-3</InternalRef>.</Para><Para><Emphasis Type="BoldItalic">Listing 5-9.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS3 Chained Animation Sequence</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">#box { background: red; width: 100px; height: 100px; position: absolute;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-name: lefttoright, toptobottom;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-duration: 3s, 6s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-timing-function: ease-in, ease-in-out;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-delay: 0s, 3s;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-fill-mode: both;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis><Figure ID="Fig3" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 5-3</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>Movement of an element after setting values for animation-delay<IndexTerm><Primary>CSS3 keyframe animations</Primary><Secondary>blending and chaining</Secondary><Tertiary>animation-delay</Tertiary></IndexTerm></SimplePara></CaptionContent></Caption><MediaObject ID="MO3"><ImageObject FileRef="9781430247227_Fig05-03.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>You&#x2019;ll use combinations of all these features in the CSS3 Animation module to create complex animations such as the bouncing ball described in the next section, and image slideshows.</Para></Section1><Section1 ID="Sec6"><Heading>Repeating Animation Sequences<IndexTerm><Primary>CSS3 keyframe animations</Primary><Secondary>repeat sequences</Secondary></IndexTerm></Heading><Para>Increasing the iteration count allows your animations to repeat multiple times. An animation can be set to repeat endlessly by using the <Emphasis FontCategory="NonProportional">infinite</Emphasis> keyword. For example, infinite animation could be used to create an endlessly bouncing ball (see Figure <InternalRef RefID="Fig4">5-4</InternalRef>).<Figure ID="Fig4" Float="Yes" Category="Standard"><Caption Language="En"><CaptionNumber>Figure 5-4</CaptionNumber>.&#x2002;<CaptionContent><SimplePara>Screenshots from an animated bouncing ball sequence</SimplePara></CaptionContent></Caption><MediaObject ID="MO4"><ImageObject FileRef="9781430247227_Fig05-04.gif" Format="GIF" Color="BlackWhite" Type="Linedraw" Rendition="HTML"/></MediaObject></Figure></Para><Para>To create a realistic rubber ball you need to accomplish several visual effects at the same time: as the ball contacts the theoretical surface underneath it, it should &#x201C;squish&#x201D; slightly before recoiling (using the principles of squash and stretch discussed in Chapter 4) while the shadow underneath it becomes more diffuse and moves further away from the point of impact as the ball rises into the air. To add extra realism, you can insert a separate easing function for certain keyframes. (This animation was derived from original work by CoDrops at <ExternalRef><RefSource>http://tympanus.net/codrops/2012/05/22/creating-an-animated-3d-bouncing-ball-with-css3/</RefSource><RefTarget TargetType="URL" Address="http://tympanus.net/codrops/2012/05/22/creating-an-animated-3d-bouncing-ball-with-css3/"/></ExternalRef>, used with permission.) See Listing 5-10.</Para><Para><Emphasis Type="BoldItalic">Listing 5-10.</Emphasis>&#x2002;<Emphasis Type="Italic">CSS for an Endlessly Repeating Bouncing Ball Using Squash-and-Stretch Animation Principles</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">@keyframes ballbounce {</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">0% {	top: 0;</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">animation-timing-function: ease-in; }</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">50% {	top: 140px; height: 140px;</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">animation-timing-function: ease-out;}</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">55% {	top: 160px; height: 120px; border-radius: 50 &#x2009;% / 60px;</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">animation-timing-function: ease-in;}</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">65% {	top: 120px; height: 140px; border-radius: 50 &#x2009;%;</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">animation-timing-function: ease-out;}</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">95% {	top: 0; animation-timing-function: ease-in;}</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">100% {	top: 0;animation-timing-function: ease-in;}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">@keyframes shadowshrink {</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">0% {	bottom: 0;</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">margin-left: -30px;width: 60px;height: 75px;</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">background: rgba(20, 20, 20, .1);</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">box-shadow: 0px 0 20px 35px rgba(20,20,20,.1);</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">border-radius: 30px / 40px;</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">animation-timing-function: ease-in;}</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">50% {bottom: 30px;</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">margin-left: -10px;width: 20px;height: 5px;</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">background: rgba(20, 20, 20, .3);</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">box-shadow: 0px 0 20px 35px rgba(20,20,20,.3);</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">border-radius: 20px / 20px;</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">animation-timing-function: ease-out;}</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">100% {	bottom: 0;</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">margin-left: -30px;</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">width: 60px;</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">height: 75px;</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">background: rgba(20, 20, 20, .1);</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">box-shadow: 0px 0 20px 35px rgba(20,20,20,.1);</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">border-radius: 30px / 40px;</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">animation-timing-function: ease-in;}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">#ball {</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">width: 140px;</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">height: 140px;</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">border-radius: 70px;</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">background: rgb(187,187,187);</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">background: linear-gradient(to bottom,</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">rgba(187,187,187,1) 0%,rgba(119,119,119,1) 99 &#x2009;%);</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">box-shadow: inset 0 -5px 15px rgba(255,255,255,0.4),</Emphasis></Para><Para Type="Programcode">		<Emphasis FontCategory="NonProportional">inset -2px -1px 40px rgba(0,0,0,0.4), 0 0 1px #000;</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">animation: ballbounce 1s infinite;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">#shadow {top: 280px;</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">width: 60px;</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">height: 75px;</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">box-shadow: 0px 0 20px 35px rgba(20,20,20,.1);</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">border-radius: 30px / 40px;</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">transform: scaleY(.3);</Emphasis></Para><Para Type="Programcode">	<Emphasis FontCategory="NonProportional">animation: shadowshrink 1s infinite;}</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">#ball, #shadow { position: absolute; top: 0; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">#shadow { left: 65px; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">#wrapper { position: relative; width: 200px; margin: 40px auto; }</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;div id &#x2009;= &#x2009;wrapper&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;div id &#x2009;= &#x2009;shadow &#x2009;&#x003E;</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">&#x003C;/div&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;div id &#x2009;= &#x2009;ball &#x2009;&#x003E;</Emphasis> &#x2009;<Emphasis FontCategory="NonProportional">&#x003C;/div&#x003E;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">&#x003C;/div&#x003E;</Emphasis></Para><Para>As you can see, by merging and synchronizing multiple CSS animation sequences you can create complex, realistic motion in HTML elements.</Para></Section1><Section1 ID="Sec7"><Heading>Pausing Keyframe Animations<IndexTerm><Primary>CSS3 keyframe animations</Primary><Secondary>pausing</Secondary></IndexTerm></Heading><Para>Animations can be paused by changing the value of the <Emphasis FontCategory="NonProportional">animation-play-state</Emphasis> property. To the code of Listing 5-9 and 5-10, you can add the code in Listing 5-11.</Para><Para><Emphasis Type="BoldItalic">Listing 5-11.</Emphasis>&#x2002;<Emphasis Type="Italic">Pausing a CSS3 Animation</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">#wrapper:hover #ball, #wrapper:hover #shadow  {</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">animation-play-state: paused;</Emphasis></Para><Para Type="Programcode"><Emphasis FontCategory="NonProportional">}</Emphasis></Para><Para>Because the default value of <Emphasis FontCategory="NonProportional">animation-play-state</Emphasis> is <Emphasis FontCategory="NonProportional">running</Emphasis>, the animation will resume when the mouse moves out from hovering over the wrapper div. As you will see in the Chapter 6, it is entirely possible to set <Emphasis FontCategory="NonProportional">running</Emphasis> and <Emphasis FontCategory="NonProportional">paused</Emphasis> states through other means.</Para></Section1><Section1 ID="Sec8"><Heading>Summary</Heading><Para>CSS3 Animations utilizing keyframes provide greater opportunities for animating HTML elements on web pages with far more variations than those created through Transitions. While building prefixed support for older browsers can be a somewhat arduous process, the essential syntax makes CSS3 animations much more effective and fun. While a number of the properties share commonalities with the Transitions module, the <Emphasis FontCategory="NonProportional">animation-fill-mode</Emphasis> is very different: while elements affected by CSS3 Transitions normally returnto their initial state, it is unusual for fully-fledged animations to do so, requiring care with both <Emphasis FontCategory="NonProportional">animation-direction</Emphasis> and <Emphasis FontCategory="NonProportional">animation-fill-mode</Emphasis>.</Para><Para>In the next chapter, you&#x2019;ll use the syntax you learned here to create advanced animation of web content, including image slideshows.</Para></Section1></Body><BodyRef FileRef="9781430247227_05_OnlinePDF.pdf" TargetType="OnlinePDF"/></Chapter>